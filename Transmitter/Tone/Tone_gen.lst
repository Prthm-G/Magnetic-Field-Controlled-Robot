0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Mon Apr 03 23:43:21 2023
0000              5   ;--------------------------------------------------------
                  5   $name Tone_gen
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _Timer2_ISR
0000             28            public _delay_ms
0000             29            public _Timer4_ISR
0000             30            public _T4CON
0000             31            public _left
0000             32            public _right
0000             33            public _backward
0000             34            public _forward
0000             35            public _track
0000             36            public _counter
0000             37   ;--------------------------------------------------------
0000             38   ; Special Function Registers
0000             39   ;--------------------------------------------------------
0000             40   _ACC            DATA 0xe0
0000             41   _ADC0ASAH       DATA 0xb6
0000             42   _ADC0ASAL       DATA 0xb5
0000             43   _ADC0ASCF       DATA 0xa1
0000             44   _ADC0ASCT       DATA 0xc7
0000             45   _ADC0CF0        DATA 0xbc
0000             46   _ADC0CF1        DATA 0xb9
0000             47   _ADC0CF2        DATA 0xdf
0000             48   _ADC0CN0        DATA 0xe8
0000             49   _ADC0CN1        DATA 0xb2
0000             50   _ADC0CN2        DATA 0xb3
0000             51   _ADC0GTH        DATA 0xc4
0000             52   _ADC0GTL        DATA 0xc3
0000             53   _ADC0H          DATA 0xbe
0000             54   _ADC0L          DATA 0xbd
0000             55   _ADC0LTH        DATA 0xc6
0000             56   _ADC0LTL        DATA 0xc5
0000             57   _ADC0MX         DATA 0xbb
0000             58   _B              DATA 0xf0
0000             59   _CKCON0         DATA 0x8e
0000             60   _CKCON1         DATA 0xa6
0000             61   _CLEN0          DATA 0xc6
0000             62   _CLIE0          DATA 0xc7
0000             63   _CLIF0          DATA 0xe8
0000             64   _CLKSEL         DATA 0xa9
0000             65   _CLOUT0         DATA 0xd1
0000             66   _CLU0CF         DATA 0xb1
0000             67   _CLU0FN         DATA 0xaf
0000             68   _CLU0MX         DATA 0x84
0000             69   _CLU1CF         DATA 0xb3
0000             70   _CLU1FN         DATA 0xb2
0000             71   _CLU1MX         DATA 0x85
0000             72   _CLU2CF         DATA 0xb6
0000             73   _CLU2FN         DATA 0xb5
0000             74   _CLU2MX         DATA 0x91
0000             75   _CLU3CF         DATA 0xbf
0000             76   _CLU3FN         DATA 0xbe
0000             77   _CLU3MX         DATA 0xae
0000             78   _CMP0CN0        DATA 0x9b
0000             79   _CMP0CN1        DATA 0x99
0000             80   _CMP0MD         DATA 0x9d
0000             81   _CMP0MX         DATA 0x9f
0000             82   _CMP1CN0        DATA 0xbf
0000             83   _CMP1CN1        DATA 0xac
0000             84   _CMP1MD         DATA 0xab
0000             85   _CMP1MX         DATA 0xaa
0000             86   _CRC0CN0        DATA 0xce
0000             87   _CRC0CN1        DATA 0x86
0000             88   _CRC0CNT        DATA 0xd3
0000             89   _CRC0DAT        DATA 0xcb
0000             90   _CRC0FLIP       DATA 0xcf
0000             91   _CRC0IN         DATA 0xca
0000             92   _CRC0ST         DATA 0xd2
0000             93   _DAC0CF0        DATA 0x91
0000             94   _DAC0CF1        DATA 0x92
0000             95   _DAC0H          DATA 0x85
0000             96   _DAC0L          DATA 0x84
0000             97   _DAC1CF0        DATA 0x93
0000             98   _DAC1CF1        DATA 0x94
0000             99   _DAC1H          DATA 0x8a
0000            100   _DAC1L          DATA 0x89
0000            101   _DAC2CF0        DATA 0x95
0000            102   _DAC2CF1        DATA 0x96
0000            103   _DAC2H          DATA 0x8c
0000            104   _DAC2L          DATA 0x8b
0000            105   _DAC3CF0        DATA 0x9a
0000            106   _DAC3CF1        DATA 0x9c
0000            107   _DAC3H          DATA 0x8e
0000            108   _DAC3L          DATA 0x8d
0000            109   _DACGCF0        DATA 0x88
0000            110   _DACGCF1        DATA 0x98
0000            111   _DACGCF2        DATA 0xa2
0000            112   _DERIVID        DATA 0xad
0000            113   _DEVICEID       DATA 0xb5
0000            114   _DPH            DATA 0x83
0000            115   _DPL            DATA 0x82
0000            116   _EIE1           DATA 0xe6
0000            117   _EIE2           DATA 0xf3
0000            118   _EIP1           DATA 0xbb
0000            119   _EIP1H          DATA 0xee
0000            120   _EIP2           DATA 0xed
0000            121   _EIP2H          DATA 0xf6
0000            122   _EMI0CN         DATA 0xe7
0000            123   _FLKEY          DATA 0xb7
0000            124   _HFO0CAL        DATA 0xc7
0000            125   _HFO1CAL        DATA 0xd6
0000            126   _HFOCN          DATA 0xef
0000            127   _I2C0ADM        DATA 0xff
0000            128   _I2C0CN0        DATA 0xba
0000            129   _I2C0DIN        DATA 0xbc
0000            130   _I2C0DOUT       DATA 0xbb
0000            131   _I2C0FCN0       DATA 0xad
0000            132   _I2C0FCN1       DATA 0xab
0000            133   _I2C0FCT        DATA 0xf5
0000            134   _I2C0SLAD       DATA 0xbd
0000            135   _I2C0STAT       DATA 0xb9
0000            136   _IE             DATA 0xa8
0000            137   _IP             DATA 0xb8
0000            138   _IPH            DATA 0xf2
0000            139   _IT01CF         DATA 0xe4
0000            140   _LFO0CN         DATA 0xb1
0000            141   _P0             DATA 0x80
0000            142   _P0MASK         DATA 0xfe
0000            143   _P0MAT          DATA 0xfd
0000            144   _P0MDIN         DATA 0xf1
0000            145   _P0MDOUT        DATA 0xa4
0000            146   _P0SKIP         DATA 0xd4
0000            147   _P1             DATA 0x90
0000            148   _P1MASK         DATA 0xee
0000            149   _P1MAT          DATA 0xed
0000            150   _P1MDIN         DATA 0xf2
0000            151   _P1MDOUT        DATA 0xa5
0000            152   _P1SKIP         DATA 0xd5
0000            153   _P2             DATA 0xa0
0000            154   _P2MASK         DATA 0xfc
0000            155   _P2MAT          DATA 0xfb
0000            156   _P2MDIN         DATA 0xf3
0000            157   _P2MDOUT        DATA 0xa6
0000            158   _P2SKIP         DATA 0xcc
0000            159   _P3             DATA 0xb0
0000            160   _P3MDIN         DATA 0xf4
0000            161   _P3MDOUT        DATA 0x9c
0000            162   _PCA0CENT       DATA 0x9e
0000            163   _PCA0CLR        DATA 0x9c
0000            164   _PCA0CN0        DATA 0xd8
0000            165   _PCA0CPH0       DATA 0xfc
0000            166   _PCA0CPH1       DATA 0xea
0000            167   _PCA0CPH2       DATA 0xec
0000            168   _PCA0CPH3       DATA 0xf5
0000            169   _PCA0CPH4       DATA 0x85
0000            170   _PCA0CPH5       DATA 0xde
0000            171   _PCA0CPL0       DATA 0xfb
0000            172   _PCA0CPL1       DATA 0xe9
0000            173   _PCA0CPL2       DATA 0xeb
0000            174   _PCA0CPL3       DATA 0xf4
0000            175   _PCA0CPL4       DATA 0x84
0000            176   _PCA0CPL5       DATA 0xdd
0000            177   _PCA0CPM0       DATA 0xda
0000            178   _PCA0CPM1       DATA 0xdb
0000            179   _PCA0CPM2       DATA 0xdc
0000            180   _PCA0CPM3       DATA 0xae
0000            181   _PCA0CPM4       DATA 0xaf
0000            182   _PCA0CPM5       DATA 0xcc
0000            183   _PCA0H          DATA 0xfa
0000            184   _PCA0L          DATA 0xf9
0000            185   _PCA0MD         DATA 0xd9
0000            186   _PCA0POL        DATA 0x96
0000            187   _PCA0PWM        DATA 0xf7
0000            188   _PCON0          DATA 0x87
0000            189   _PCON1          DATA 0xcd
0000            190   _PFE0CN         DATA 0xc1
0000            191   _PRTDRV         DATA 0xf6
0000            192   _PSCTL          DATA 0x8f
0000            193   _PSTAT0         DATA 0xaa
0000            194   _PSW            DATA 0xd0
0000            195   _REF0CN         DATA 0xd1
0000            196   _REG0CN         DATA 0xc9
0000            197   _REVID          DATA 0xb6
0000            198   _RSTSRC         DATA 0xef
0000            199   _SBCON1         DATA 0x94
0000            200   _SBRLH1         DATA 0x96
0000            201   _SBRLL1         DATA 0x95
0000            202   _SBUF           DATA 0x99
0000            203   _SBUF0          DATA 0x99
0000            204   _SBUF1          DATA 0x92
0000            205   _SCON           DATA 0x98
0000            206   _SCON0          DATA 0x98
0000            207   _SCON1          DATA 0xc8
0000            208   _SFRPAGE        DATA 0xa7
0000            209   _SFRPGCN        DATA 0xbc
0000            210   _SFRSTACK       DATA 0xd7
0000            211   _SMB0ADM        DATA 0xd6
0000            212   _SMB0ADR        DATA 0xd7
0000            213   _SMB0CF         DATA 0xc1
0000            214   _SMB0CN0        DATA 0xc0
0000            215   _SMB0DAT        DATA 0xc2
0000            216   _SMB0FCN0       DATA 0xc3
0000            217   _SMB0FCN1       DATA 0xc4
0000            218   _SMB0FCT        DATA 0xef
0000            219   _SMB0RXLN       DATA 0xc5
0000            220   _SMB0TC         DATA 0xac
0000            221   _SMOD1          DATA 0x93
0000            222   _SP             DATA 0x81
0000            223   _SPI0CFG        DATA 0xa1
0000            224   _SPI0CKR        DATA 0xa2
0000            225   _SPI0CN0        DATA 0xf8
0000            226   _SPI0DAT        DATA 0xa3
0000            227   _SPI0FCN0       DATA 0x9a
0000            228   _SPI0FCN1       DATA 0x9b
0000            229   _SPI0FCT        DATA 0xf7
0000            230   _SPI0PCF        DATA 0xdf
0000            231   _TCON           DATA 0x88
0000            232   _TH0            DATA 0x8c
0000            233   _TH1            DATA 0x8d
0000            234   _TL0            DATA 0x8a
0000            235   _TL1            DATA 0x8b
0000            236   _TMOD           DATA 0x89
0000            237   _TMR2CN0        DATA 0xc8
0000            238   _TMR2CN1        DATA 0xfd
0000            239   _TMR2H          DATA 0xcf
0000            240   _TMR2L          DATA 0xce
0000            241   _TMR2RLH        DATA 0xcb
0000            242   _TMR2RLL        DATA 0xca
0000            243   _TMR3CN0        DATA 0x91
0000            244   _TMR3CN1        DATA 0xfe
0000            245   _TMR3H          DATA 0x95
0000            246   _TMR3L          DATA 0x94
0000            247   _TMR3RLH        DATA 0x93
0000            248   _TMR3RLL        DATA 0x92
0000            249   _TMR4CN0        DATA 0x98
0000            250   _TMR4CN1        DATA 0xff
0000            251   _TMR4H          DATA 0xa5
0000            252   _TMR4L          DATA 0xa4
0000            253   _TMR4RLH        DATA 0xa3
0000            254   _TMR4RLL        DATA 0xa2
0000            255   _TMR5CN0        DATA 0xc0
0000            256   _TMR5CN1        DATA 0xf1
0000            257   _TMR5H          DATA 0xd5
0000            258   _TMR5L          DATA 0xd4
0000            259   _TMR5RLH        DATA 0xd3
0000            260   _TMR5RLL        DATA 0xd2
0000            261   _UART0PCF       DATA 0xd9
0000            262   _UART1FCN0      DATA 0x9d
0000            263   _UART1FCN1      DATA 0xd8
0000            264   _UART1FCT       DATA 0xfa
0000            265   _UART1LIN       DATA 0x9e
0000            266   _UART1PCF       DATA 0xda
0000            267   _VDM0CN         DATA 0xff
0000            268   _WDTCN          DATA 0x97
0000            269   _XBR0           DATA 0xe1
0000            270   _XBR1           DATA 0xe2
0000            271   _XBR2           DATA 0xe3
0000            272   _XOSC0CN        DATA 0x86
0000            273   _DPTR           DATA 0x8382
0000            274   _TMR2RL         DATA 0xcbca
0000            275   _TMR3RL         DATA 0x9392
0000            276   _TMR4RL         DATA 0xa3a2
0000            277   _TMR5RL         DATA 0xd3d2
0000            278   _TMR0           DATA 0x8c8a
0000            279   _TMR1           DATA 0x8d8b
0000            280   _TMR2           DATA 0xcfce
0000            281   _TMR3           DATA 0x9594
0000            282   _TMR4           DATA 0xa5a4
0000            283   _TMR5           DATA 0xd5d4
0000            284   _SBRL1          DATA 0x9695
0000            285   _PCA0           DATA 0xfaf9
0000            286   _PCA0CP0        DATA 0xfcfb
0000            287   _PCA0CP1        DATA 0xeae9
0000            288   _PCA0CP2        DATA 0xeceb
0000            289   _PCA0CP3        DATA 0xf5f4
0000            290   _PCA0CP4        DATA 0x8584
0000            291   _PCA0CP5        DATA 0xdedd
0000            292   _ADC0ASA        DATA 0xb6b5
0000            293   _ADC0GT         DATA 0xc4c3
0000            294   _ADC0           DATA 0xbebd
0000            295   _ADC0LT         DATA 0xc6c5
0000            296   _DAC0           DATA 0x8584
0000            297   _DAC1           DATA 0x8a89
0000            298   _DAC2           DATA 0x8c8b
0000            299   _DAC3           DATA 0x8e8d
0000            300   ;--------------------------------------------------------
0000            301   ; special function bits
0000            302   ;--------------------------------------------------------
0000            303   _ACC_0          BIT 0xe0
0000            304   _ACC_1          BIT 0xe1
0000            305   _ACC_2          BIT 0xe2
0000            306   _ACC_3          BIT 0xe3
0000            307   _ACC_4          BIT 0xe4
0000            308   _ACC_5          BIT 0xe5
0000            309   _ACC_6          BIT 0xe6
0000            310   _ACC_7          BIT 0xe7
0000            311   _TEMPE          BIT 0xe8
0000            312   _ADGN0          BIT 0xe9
0000            313   _ADGN1          BIT 0xea
0000            314   _ADWINT         BIT 0xeb
0000            315   _ADBUSY         BIT 0xec
0000            316   _ADINT          BIT 0xed
0000            317   _IPOEN          BIT 0xee
0000            318   _ADEN           BIT 0xef
0000            319   _B_0            BIT 0xf0
0000            320   _B_1            BIT 0xf1
0000            321   _B_2            BIT 0xf2
0000            322   _B_3            BIT 0xf3
0000            323   _B_4            BIT 0xf4
0000            324   _B_5            BIT 0xf5
0000            325   _B_6            BIT 0xf6
0000            326   _B_7            BIT 0xf7
0000            327   _C0FIF          BIT 0xe8
0000            328   _C0RIF          BIT 0xe9
0000            329   _C1FIF          BIT 0xea
0000            330   _C1RIF          BIT 0xeb
0000            331   _C2FIF          BIT 0xec
0000            332   _C2RIF          BIT 0xed
0000            333   _C3FIF          BIT 0xee
0000            334   _C3RIF          BIT 0xef
0000            335   _D1SRC0         BIT 0x88
0000            336   _D1SRC1         BIT 0x89
0000            337   _D1AMEN         BIT 0x8a
0000            338   _D01REFSL       BIT 0x8b
0000            339   _D3SRC0         BIT 0x8c
0000            340   _D3SRC1         BIT 0x8d
0000            341   _D3AMEN         BIT 0x8e
0000            342   _D23REFSL       BIT 0x8f
0000            343   _D0UDIS         BIT 0x98
0000            344   _D1UDIS         BIT 0x99
0000            345   _D2UDIS         BIT 0x9a
0000            346   _D3UDIS         BIT 0x9b
0000            347   _EX0            BIT 0xa8
0000            348   _ET0            BIT 0xa9
0000            349   _EX1            BIT 0xaa
0000            350   _ET1            BIT 0xab
0000            351   _ES0            BIT 0xac
0000            352   _ET2            BIT 0xad
0000            353   _ESPI0          BIT 0xae
0000            354   _EA             BIT 0xaf
0000            355   _PX0            BIT 0xb8
0000            356   _PT0            BIT 0xb9
0000            357   _PX1            BIT 0xba
0000            358   _PT1            BIT 0xbb
0000            359   _PS0            BIT 0xbc
0000            360   _PT2            BIT 0xbd
0000            361   _PSPI0          BIT 0xbe
0000            362   _P0_0           BIT 0x80
0000            363   _P0_1           BIT 0x81
0000            364   _P0_2           BIT 0x82
0000            365   _P0_3           BIT 0x83
0000            366   _P0_4           BIT 0x84
0000            367   _P0_5           BIT 0x85
0000            368   _P0_6           BIT 0x86
0000            369   _P0_7           BIT 0x87
0000            370   _P1_0           BIT 0x90
0000            371   _P1_1           BIT 0x91
0000            372   _P1_2           BIT 0x92
0000            373   _P1_3           BIT 0x93
0000            374   _P1_4           BIT 0x94
0000            375   _P1_5           BIT 0x95
0000            376   _P1_6           BIT 0x96
0000            377   _P1_7           BIT 0x97
0000            378   _P2_0           BIT 0xa0
0000            379   _P2_1           BIT 0xa1
0000            380   _P2_2           BIT 0xa2
0000            381   _P2_3           BIT 0xa3
0000            382   _P2_4           BIT 0xa4
0000            383   _P2_5           BIT 0xa5
0000            384   _P2_6           BIT 0xa6
0000            385   _P3_0           BIT 0xb0
0000            386   _P3_1           BIT 0xb1
0000            387   _P3_2           BIT 0xb2
0000            388   _P3_3           BIT 0xb3
0000            389   _P3_4           BIT 0xb4
0000            390   _P3_7           BIT 0xb7
0000            391   _CCF0           BIT 0xd8
0000            392   _CCF1           BIT 0xd9
0000            393   _CCF2           BIT 0xda
0000            394   _CCF3           BIT 0xdb
0000            395   _CCF4           BIT 0xdc
0000            396   _CCF5           BIT 0xdd
0000            397   _CR             BIT 0xde
0000            398   _CF             BIT 0xdf
0000            399   _PARITY         BIT 0xd0
0000            400   _F1             BIT 0xd1
0000            401   _OV             BIT 0xd2
0000            402   _RS0            BIT 0xd3
0000            403   _RS1            BIT 0xd4
0000            404   _F0             BIT 0xd5
0000            405   _AC             BIT 0xd6
0000            406   _CY             BIT 0xd7
0000            407   _RI             BIT 0x98
0000            408   _TI             BIT 0x99
0000            409   _RB8            BIT 0x9a
0000            410   _TB8            BIT 0x9b
0000            411   _REN            BIT 0x9c
0000            412   _CE             BIT 0x9d
0000            413   _SMODE          BIT 0x9e
0000            414   _RI1            BIT 0xc8
0000            415   _TI1            BIT 0xc9
0000            416   _RBX1           BIT 0xca
0000            417   _TBX1           BIT 0xcb
0000            418   _REN1           BIT 0xcc
0000            419   _PERR1          BIT 0xcd
0000            420   _OVR1           BIT 0xce
0000            421   _SI             BIT 0xc0
0000            422   _ACK            BIT 0xc1
0000            423   _ARBLOST        BIT 0xc2
0000            424   _ACKRQ          BIT 0xc3
0000            425   _STO            BIT 0xc4
0000            426   _STA            BIT 0xc5
0000            427   _TXMODE         BIT 0xc6
0000            428   _MASTER         BIT 0xc7
0000            429   _SPIEN          BIT 0xf8
0000            430   _TXNF           BIT 0xf9
0000            431   _NSSMD0         BIT 0xfa
0000            432   _NSSMD1         BIT 0xfb
0000            433   _RXOVRN         BIT 0xfc
0000            434   _MODF           BIT 0xfd
0000            435   _WCOL           BIT 0xfe
0000            436   _SPIF           BIT 0xff
0000            437   _IT0            BIT 0x88
0000            438   _IE0            BIT 0x89
0000            439   _IT1            BIT 0x8a
0000            440   _IE1            BIT 0x8b
0000            441   _TR0            BIT 0x8c
0000            442   _TF0            BIT 0x8d
0000            443   _TR1            BIT 0x8e
0000            444   _TF1            BIT 0x8f
0000            445   _T2XCLK0        BIT 0xc8
0000            446   _T2XCLK1        BIT 0xc9
0000            447   _TR2            BIT 0xca
0000            448   _T2SPLIT        BIT 0xcb
0000            449   _TF2CEN         BIT 0xcc
0000            450   _TF2LEN         BIT 0xcd
0000            451   _TF2L           BIT 0xce
0000            452   _TF2H           BIT 0xcf
0000            453   _T4XCLK0        BIT 0x98
0000            454   _T4XCLK1        BIT 0x99
0000            455   _TR4            BIT 0x9a
0000            456   _T4SPLIT        BIT 0x9b
0000            457   _TF4CEN         BIT 0x9c
0000            458   _TF4LEN         BIT 0x9d
0000            459   _TF4L           BIT 0x9e
0000            460   _TF4H           BIT 0x9f
0000            461   _T5XCLK0        BIT 0xc0
0000            462   _T5XCLK1        BIT 0xc1
0000            463   _TR5            BIT 0xc2
0000            464   _T5SPLIT        BIT 0xc3
0000            465   _TF5CEN         BIT 0xc4
0000            466   _TF5LEN         BIT 0xc5
0000            467   _TF5L           BIT 0xc6
0000            468   _TF5H           BIT 0xc7
0000            469   _RIE            BIT 0xd8
0000            470   _RXTO0          BIT 0xd9
0000            471   _RXTO1          BIT 0xda
0000            472   _RFRQ           BIT 0xdb
0000            473   _TIE            BIT 0xdc
0000            474   _TXHOLD         BIT 0xdd
0000            475   _TXNF1          BIT 0xde
0000            476   _TFRQ           BIT 0xdf
0000            477   ;--------------------------------------------------------
0000            478   ; overlayable register banks
0000            479   ;--------------------------------------------------------
0000            480            rbank0 segment data overlay
0000            481            rbank1 segment data overlay
0000            482   ;--------------------------------------------------------
0000            483   ; overlayable bit register bank
0000            484   ;--------------------------------------------------------
0000            485            rseg BIT_BANK
0000            486   bits:
0000            487            ds 1
0001            488            b0 equ  bits.0 
0001            489            b1 equ  bits.1 
0001            490            b2 equ  bits.2 
0001            491            b3 equ  bits.3 
0001            492            b4 equ  bits.4 
0001            493            b5 equ  bits.5 
0001            494            b6 equ  bits.6 
0001            495            b7 equ  bits.7 
0001            496   ;--------------------------------------------------------
0001            497   ; internal ram data
0001            498   ;--------------------------------------------------------
0000            499            rseg R_DSEG
0000            500   _counter:
0000            501            ds 2
0002            502   _track:
0002            503            ds 2
0004            504   _forward:
0004            505            ds 2
0006            506   _backward:
0006            507            ds 2
0008            508   _right:
0008            509            ds 2
000A            510   _left:
000A            511            ds 2
000C            512   _T4CON:
000C            513            ds 2
000E            514   _main_rbuf_1_70:
000E            515            ds 6
0014            516   _main_f_1_70:
0014            517            ds 4
0018            518   _main_joy_x_1_70:
0018            519            ds 2
001A            520   _main_joy_y_1_70:
001A            521            ds 2
001C            522   _main_off_x_1_70:
001C            523            ds 2
001E            524   _main_off_y_1_70:
001E            525            ds 2
0020            526   _main_acc_y_1_70:
0020            527            ds 2
0022            528   _main_acc_z_1_70:
0022            529            ds 2
0024            530   _main_sloc0_1_0:
0024            531            ds 2
0026            532   ;--------------------------------------------------------
0026            533   ; overlayable items in internal ram 
0026            534   ;--------------------------------------------------------
0000            535            rseg    R_OSEG
0000            536   ;--------------------------------------------------------
0000            537   ; indirectly addressable internal ram data
0000            538   ;--------------------------------------------------------
0000            539            rseg R_ISEG
0000            540   ;--------------------------------------------------------
0000            541   ; absolute internal ram data
0000            542   ;--------------------------------------------------------
0000            543            DSEG
0000            544   ;--------------------------------------------------------
0000            545   ; bit data
0000            546   ;--------------------------------------------------------
0000            547            rseg R_BSEG
0000            548   _main_but1_1_70:
0000            549            DBIT    1
0001            550   _main_but2_1_70:
0001            551            DBIT    1
0002            552   ;--------------------------------------------------------
0002            553   ; paged external ram data
0002            554   ;--------------------------------------------------------
0000            555            rseg R_PSEG
0000            556   ;--------------------------------------------------------
0000            557   ; external ram data
0000            558   ;--------------------------------------------------------
0000            559            rseg R_XSEG
0000            560   ;--------------------------------------------------------
0000            561   ; absolute external ram data
0000            562   ;--------------------------------------------------------
0000            563            XSEG
0000            564   ;--------------------------------------------------------
0000            565   ; external initialized ram data
0000            566   ;--------------------------------------------------------
0000            567            rseg R_IXSEG
0000            568            rseg R_HOME
0000            569            rseg R_GSINIT
0000            570            rseg R_CSEG
0000            571   ;--------------------------------------------------------
0000            572   ; Reset entry point and interrupt vectors
0000            573   ;--------------------------------------------------------
0000            574            CSEG at 0x0000
0000 020000     575            ljmp    _crt0
002B            576            CSEG at 0x002b
002B 020000     577            ljmp    _Timer2_ISR
0083            578            CSEG at 0x0083
0083 020000     579            ljmp    _Timer4_ISR
0086            580   ;--------------------------------------------------------
0086            581   ; global & static initialisations
0086            582   ;--------------------------------------------------------
0000            583            rseg R_HOME
0000            584            rseg R_GSINIT
0000            585            rseg R_GSINIT
0000            586   ;--------------------------------------------------------
0000            587   ; data variables initialization
0000            588   ;--------------------------------------------------------
0000            589            rseg R_DINIT
0000            590   ;        Tone_gen.c:14: volatile int counter = 0;
0000 E4         591            clr     a
0001 F5D0       592            mov     _counter,a
0003 F5D1       593            mov     (_counter + 1),a
0005            594   ;        Tone_gen.c:15: volatile int track = 0;
0005 E4         595            clr     a
0006 F590       596            mov     _track,a
0008 F591       597            mov     (_track + 1),a
000A            598   ;        Tone_gen.c:16: volatile int forward = 0;
000A E4         599            clr     a
000B F550       600            mov     _forward,a
000D F551       601            mov     (_forward + 1),a
000F            602   ;        Tone_gen.c:17: volatile int backward = 0;
000F E4         603            clr     a
0010 F510       604            mov     _backward,a
0012 F511       605            mov     (_backward + 1),a
0014            606   ;        Tone_gen.c:18: volatile int right = 0;
0014 E4         607            clr     a
0015 F5D0       608            mov     _right,a
0017 F5D1       609            mov     (_right + 1),a
0019            610   ;        Tone_gen.c:19: volatile int left = 0;
0019 E4         611            clr     a
001A F590       612            mov     _left,a
001C F591       613            mov     (_left + 1),a
001E            614            ; The linker places a 'ret' at the end of segment R_DINIT.
001E            615   ;--------------------------------------------------------
001E            616   ; code
001E            617   ;--------------------------------------------------------
0000            618            rseg R_CSEG
0000            619   ;------------------------------------------------------------
0000            620   ;Allocation info for local variables in function 'Timer4_ISR'
0000            621   ;------------------------------------------------------------
0000            622   ;------------------------------------------------------------
0000            623   ;        Tone_gen.c:23: void Timer4_ISR (void) interrupt 16 using 1
0000            624   ;        -----------------------------------------
0000            625   ;         function Timer4_ISR
0000            626   ;        -----------------------------------------
0000            627   _Timer4_ISR:
0000            628            using   1
0000 C0D0       629            push    psw
0002 75D008     630            mov     psw,#0x08
0005            631   ;        Tone_gen.c:25: TF4H = 0;   // Clear Timer4 interrupt flag
0005 C29F       632            clr     _TF4H
0007 D0D0       633            pop     psw
0009 32         634            reti
000A            635   ;        eliminated unneeded push/pop dpl
000A            636   ;        eliminated unneeded push/pop dph
000A            637   ;        eliminated unneeded push/pop b
000A            638   ;        eliminated unneeded push/pop acc
000A            639   ;------------------------------------------------------------
000A            640   ;Allocation info for local variables in function 'delay_ms'
000A            641   ;------------------------------------------------------------
000A            642   ;ms                        Allocated to registers r2 r3 
000A            643   ;------------------------------------------------------------
000A            644   ;        Tone_gen.c:29: void delay_ms (int ms)
000A            645   ;        -----------------------------------------
000A            646   ;         function delay_ms
000A            647   ;        -----------------------------------------
000A            648   _delay_ms:
000A            649            using   0
000A AA82       650            mov     r2,dpl
000C AB83       651            mov     r3,dph
000E            652   ;        Tone_gen.c:31: while (ms--)
000E            653   L003004?:
000E 8A04       654            mov     ar4,r2
0010 8B05       655            mov     ar5,r3
0012 1A         656            dec     r2
0013 BAFFC8     657            cjne    r2,#0xff,L003014?
0016 1B         658            dec     r3
0017            659   L003014?:
0017 EC         660            mov     a,r4
0018 4D         661            orl     a,r5
0019 6000       662            jz      L003007?
001B            663   ;        Tone_gen.c:33: T4CON &= ~0x10;     // Stop Timer4
001B 5350EF     664            anl     _T4CON,#0xEF
001E E551       665            mov     a,(_T4CON + 1)
0020            666   ;        Tone_gen.c:34: TMR4CN0 = 0x00;     // Clear Timer4 register
0020 759800     667            mov     _TMR4CN0,#0x00
0023            668   ;        Tone_gen.c:35: TMR4RL = -2000;     // Load Timer4 with -2000 for a 1ms delay
0023 75A230     669            mov     _TMR4RL,#0x30
0026 75A3F8     670            mov     (_TMR4RL >> 8),#0xF8
0029            671   ;        Tone_gen.c:36: T4CON |= 0x04;      // Start Timer4
0029 435004     672            orl     _T4CON,#0x04
002C E551       673            mov     a,(_T4CON + 1)
002E            674   ;        Tone_gen.c:37: while (!(T4CON & 0x80));    // Wait for Timer4 overflow
002E            675   L003001?:
002E E550       676            mov     a,_T4CON
0030 20E788     677            jb      acc.7,L003004?
0033 8000       678            sjmp    L003001?
0035            679   L003007?:
0035 22         680            ret
0036            681   ;------------------------------------------------------------
0036            682   ;Allocation info for local variables in function 'Timer2_ISR'
0036            683   ;------------------------------------------------------------
0036            684   ;------------------------------------------------------------
0036            685   ;        Tone_gen.c:41: void Timer2_ISR (void) interrupt INTERRUPT_TIMER2
0036            686   ;        -----------------------------------------
0036            687   ;         function Timer2_ISR
0036            688   ;        -----------------------------------------
0036            689   _Timer2_ISR:
0036 C068       690            push    bits
0038 C0E0       691            push    acc
003A C0F0       692            push    b
003C C082       693            push    dpl
003E C083       694            push    dph
0040 C002       695            push    (0+2)
0042 C003       696            push    (0+3)
0044 C004       697            push    (0+4)
0046 C005       698            push    (0+5)
0048 C006       699            push    (0+6)
004A C007       700            push    (0+7)
004C C000       701            push    (0+0)
004E C001       702            push    (0+1)
0050 C0D0       703            push    psw
0052 75D000     704            mov     psw,#0x00
0055            705   ;        Tone_gen.c:137: if(track){
0055 E590       706            mov     a,_track
0057 4591       707            orl     a,(_track + 1)
0059 7000       708            jnz     L004022?
005B 020000     709            ljmp    L004013?
005E            710   L004022?:
005E            711   ;        Tone_gen.c:138: if(counter ==1){ //forward//
005E 7401       712            mov     a,#0x01
0060 B5D088     713            cjne    a,_counter,L004023?
0063 E4         714            clr     a
0064 B5D188     715            cjne    a,(_counter + 1),L004023?
0067 8000       716            sjmp    L004024?
0069            717   L004023?:
0069 8000       718            sjmp    L004010?
006B            719   L004024?:
006B            720   ;        Tone_gen.c:139: TF2H=0;
006B C2CF       721            clr     _TF2H
006D            722   ;        Tone_gen.c:140: OUT0=!OUT0;
006D B2A0       723            cpl     _P2_0
006F            724   ;        Tone_gen.c:141: delay_ms(700);
006F 9002BC     725            mov     dptr,#0x02BC
0072 120000     726            lcall   _delay_ms
0075            727   ;        Tone_gen.c:142: OUT1=!OUT0;
0075 A2A0       728            mov     c,_P2_0
0077 B3         729            cpl     c
0078 9297       730            mov     _P1_7,c
007A 020000     731            ljmp    L004015?
007D            732   L004010?:
007D            733   ;        Tone_gen.c:145: else if(counter==2){ //backward//
007D 7402       734            mov     a,#0x02
007F B5D088     735            cjne    a,_counter,L004025?
0082 E4         736            clr     a
0083 B5D188     737            cjne    a,(_counter + 1),L004025?
0086 8000       738            sjmp    L004026?
0088            739   L004025?:
0088 8000       740            sjmp    L004007?
008A            741   L004026?:
008A            742   ;        Tone_gen.c:146: TF2H=0;
008A C2CF       743            clr     _TF2H
008C            744   ;        Tone_gen.c:147: OUT0=!OUT0;
008C B2A0       745            cpl     _P2_0
008E            746   ;        Tone_gen.c:148: delay_ms(300);
008E 90012C     747            mov     dptr,#0x012C
0091 120000     748            lcall   _delay_ms
0094            749   ;        Tone_gen.c:149: OUT1=!OUT0;
0094 A2A0       750            mov     c,_P2_0
0096 B3         751            cpl     c
0097 9297       752            mov     _P1_7,c
0099            753   ;        Tone_gen.c:150: delay_ms(250);
0099 9000FA     754            mov     dptr,#0x00FA
009C 120000     755            lcall   _delay_ms
009F 8000       756            sjmp    L004015?
00A1            757   L004007?:
00A1            758   ;        Tone_gen.c:154: else if(counter==3){//left//
00A1 7403       759            mov     a,#0x03
00A3 B5D048     760            cjne    a,_counter,L004027?
00A6 E4         761            clr     a
00A7 B5D148     762            cjne    a,(_counter + 1),L004027?
00AA 8000       763            sjmp    L004028?
00AC            764   L004027?:
00AC 8000       765            sjmp    L004004?
00AE            766   L004028?:
00AE            767   ;        Tone_gen.c:155: TF2H=0;
00AE C2CF       768            clr     _TF2H
00B0            769   ;        Tone_gen.c:156: OUT0=!OUT0;
00B0 B2A0       770            cpl     _P2_0
00B2            771   ;        Tone_gen.c:157: delay_ms(250);
00B2 9000FA     772            mov     dptr,#0x00FA
00B5 120000     773            lcall   _delay_ms
00B8            774   ;        Tone_gen.c:158: OUT1=!OUT0;
00B8 A2A0       775            mov     c,_P2_0
00BA B3         776            cpl     c
00BB 9297       777            mov     _P1_7,c
00BD            778   ;        Tone_gen.c:159: delay_ms(250);
00BD 9000FA     779            mov     dptr,#0x00FA
00C0 120000     780            lcall   _delay_ms
00C3 8000       781            sjmp    L004015?
00C5            782   L004004?:
00C5            783   ;        Tone_gen.c:162: else if(counter==4){//right//
00C5 7404       784            mov     a,#0x04
00C7 B5D008     785            cjne    a,_counter,L004029?
00CA E4         786            clr     a
00CB B5D108     787            cjne    a,(_counter + 1),L004029?
00CE 8000       788            sjmp    L004030?
00D0            789   L004029?:
00D0 8000       790            sjmp    L004015?
00D2            791   L004030?:
00D2            792   ;        Tone_gen.c:163: TF2H=0;
00D2 C2CF       793            clr     _TF2H
00D4            794   ;        Tone_gen.c:164: OUT0=!OUT0;
00D4 B2A0       795            cpl     _P2_0
00D6            796   ;        Tone_gen.c:165: delay_ms(62);
00D6 90003E     797            mov     dptr,#0x003E
00D9 120000     798            lcall   _delay_ms
00DC            799   ;        Tone_gen.c:166: OUT1=!OUT0;
00DC A2A0       800            mov     c,_P2_0
00DE B3         801            cpl     c
00DF 9297       802            mov     _P1_7,c
00E1            803   ;        Tone_gen.c:167: delay_ms(250);
00E1 9000FA     804            mov     dptr,#0x00FA
00E4 120000     805            lcall   _delay_ms
00E7 8000       806            sjmp    L004015?
00E9            807   L004013?:
00E9            808   ;        Tone_gen.c:173: TF2H = 0; // Clear Timer2 interrupt flag
00E9 C2CF       809            clr     _TF2H
00EB            810   ;        Tone_gen.c:174: OUT0=!OUT0;
00EB B2A0       811            cpl     _P2_0
00ED            812   ;        Tone_gen.c:175: OUT1=!OUT0;
00ED A2A0       813            mov     c,_P2_0
00EF B3         814            cpl     c
00F0 9297       815            mov     _P1_7,c
00F2            816   L004015?:
00F2 D0D0       817            pop     psw
00F4 D001       818            pop     (0+1)
00F6 D000       819            pop     (0+0)
00F8 D007       820            pop     (0+7)
00FA D006       821            pop     (0+6)
00FC D005       822            pop     (0+5)
00FE D004       823            pop     (0+4)
0100 D003       824            pop     (0+3)
0102 D002       825            pop     (0+2)
0104 D083       826            pop     dph
0106 D082       827            pop     dpl
0108 D0F0       828            pop     b
010A D0E0       829            pop     acc
010C D068       830            pop     bits
010E 32         831            reti
010F            832   ;------------------------------------------------------------
010F            833   ;Allocation info for local variables in function 'main'
010F            834   ;------------------------------------------------------------
010F            835   ;rbuf                      Allocated with name '_main_rbuf_1_70'
010F            836   ;x                         Allocated to registers r2 r3 r4 r5 
010F            837   ;f                         Allocated with name '_main_f_1_70'
010F            838   ;joy_x                     Allocated with name '_main_joy_x_1_70'
010F            839   ;joy_y                     Allocated with name '_main_joy_y_1_70'
010F            840   ;off_x                     Allocated with name '_main_off_x_1_70'
010F            841   ;off_y                     Allocated with name '_main_off_y_1_70'
010F            842   ;acc_x                     Allocated to registers r2 r3 
010F            843   ;acc_y                     Allocated with name '_main_acc_y_1_70'
010F            844   ;acc_z                     Allocated with name '_main_acc_z_1_70'
010F            845   ;tmr2_origin               Allocated to registers 
010F            846   ;sloc0                     Allocated with name '_main_sloc0_1_0'
010F            847   ;------------------------------------------------------------
010F            848   ;        Tone_gen.c:190: void main (void)
010F            849   ;        -----------------------------------------
010F            850   ;         function main
010F            851   ;        -----------------------------------------
010F            852   _main:
010F            853   ;        Tone_gen.c:199: int tmr2_origin = TMR2RL;
010F E5CA       854            mov     a,_TMR2RL
0111 E5CB       855            mov     a,(_TMR2RL >> 8)
0113            856   ;        Tone_gen.c:205: LCD_4BIT();
0113 120000     857            lcall   _LCD_4BIT
0116            858   ;        Tone_gen.c:206: LCDprint("thisworking", 1, 1);
0116 750001     859            mov     _LCDprint_PARM_2,#0x01
0119 D200       860            setb    _LCDprint_PARM_3
011B 90BE68     861            mov     dptr,#__str_0
011E 75F080     862            mov     b,#0x80
0121 120000     863            lcall   _LCDprint
0124            864   ;        Tone_gen.c:210: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0124 74E8       865            mov     a,#__str_1
0126 C0E0       866            push    acc
0128 74BE       867            mov     a,#(__str_1 >> 8)
012A C0E0       868            push    acc
012C 7480       869            mov     a,#0x80
012E C0E0       870            push    acc
0130 120000     871            lcall   _printf
0133 1581       872            dec     sp
0135 1581       873            dec     sp
0137 1581       874            dec     sp
0139            875   ;        Tone_gen.c:212: printf("New frequency=");
0139 74A8       876            mov     a,#__str_2
013B C0E0       877            push    acc
013D 74BF       878            mov     a,#(__str_2 >> 8)
013F C0E0       879            push    acc
0141 7480       880            mov     a,#0x80
0143 C0E0       881            push    acc
0145 120000     882            lcall   _printf
0148 1581       883            dec     sp
014A 1581       884            dec     sp
014C 1581       885            dec     sp
014E            886   ;        Tone_gen.c:213: scanf("%lu", &f);
014E 74A8       887            mov     a,#_main_f_1_70
0150 C0E0       888            push    acc
0152 74B4       889            mov     a,#(_main_f_1_70 >> 8)
0154 C0E0       890            push    acc
0156 7440       891            mov     a,#0x40
0158 C0E0       892            push    acc
015A 74E8       893            mov     a,#__str_3
015C C0E0       894            push    acc
015E 74BF       895            mov     a,#(__str_3 >> 8)
0160 C0E0       896            push    acc
0162 7480       897            mov     a,#0x80
0164 C0E0       898            push    acc
0166 120000     899            lcall   _scanf
0169 E581       900            mov     a,sp
016B 24FA       901            add     a,#0xfa
016D F581       902            mov     sp,a
016F            903   ;        Tone_gen.c:214: x=(SYSCLK/(2L*f));
016F E5A8       904            mov     a,_main_f_1_70
0171 25A8       905            add     a,_main_f_1_70
0173 F500       906            mov     __divulong_PARM_2,a
0175 E5A9       907            mov     a,(_main_f_1_70 + 1)
0177 33         908            rlc     a
0178 F501       909            mov     (__divulong_PARM_2 + 1),a
017A E5AA       910            mov     a,(_main_f_1_70 + 2)
017C 33         911            rlc     a
017D F502       912            mov     (__divulong_PARM_2 + 2),a
017F E5AB       913            mov     a,(_main_f_1_70 + 3)
0181 33         914            rlc     a
0182 F503       915            mov     (__divulong_PARM_2 + 3),a
0184 90A200     916            mov     dptr,#0xA200
0187 75F04A     917            mov     b,#0x4A
018A 7404       918            mov     a,#0x04
018C 120000     919            lcall   __divulong
018F AA82       920            mov     r2,dpl
0191 AB83       921            mov     r3,dph
0193 ACF0       922            mov     r4,b
0195 FD         923            mov     r5,a
0196            924   ;        Tone_gen.c:215: if(x>0xffff)
0196 C3         925            clr     c
0197 74FF       926            mov     a,#0xFF
0199 9A         927            subb    a,r2
019A 74FF       928            mov     a,#0xFF
019C 9B         929            subb    a,r3
019D E4         930            clr     a
019E 9C         931            subb    a,r4
019F E4         932            clr     a
01A0 9D         933            subb    a,r5
01A1 5000       934            jnc     L005002?
01A3            935   ;        Tone_gen.c:217: printf("Sorry %lu Hz is out of range.\n", f);
01A3 C0A8       936            push    _main_f_1_70
01A5 C0A9       937            push    (_main_f_1_70 + 1)
01A7 C0AA       938            push    (_main_f_1_70 + 2)
01A9 C0AB       939            push    (_main_f_1_70 + 3)
01AB 7438       940            mov     a,#__str_4
01AD C0E0       941            push    acc
01AF 74C1       942            mov     a,#(__str_4 >> 8)
01B1 C0E0       943            push    acc
01B3 7480       944            mov     a,#0x80
01B5 C0E0       945            push    acc
01B7 120000     946            lcall   _printf
01BA E581       947            mov     a,sp
01BC 24F9       948            add     a,#0xf9
01BE F581       949            mov     sp,a
01C0 020000     950            ljmp    L005003?
01C3            951   L005002?:
01C3            952   ;        Tone_gen.c:221: TR2=0; // Stop timer 2
01C3 C2CA       953            clr     _TR2
01C5            954   ;        Tone_gen.c:222: TMR2RL=0x10000L-x; // Change reload value for new frequency
01C5 E4         955            clr     a
01C6 C3         956            clr     c
01C7 9A         957            subb    a,r2
01C8 FA         958            mov     r2,a
01C9 E4         959            clr     a
01CA 9B         960            subb    a,r3
01CB FB         961            mov     r3,a
01CC 7401       962            mov     a,#0x01
01CE 9C         963            subb    a,r4
01CF E4         964            clr     a
01D0 9D         965            subb    a,r5
01D1 8ACA       966            mov     _TMR2RL,r2
01D3 8BCB       967            mov     (_TMR2RL >> 8),r3
01D5            968   ;        Tone_gen.c:223: TMR3RL = TMR2RL*2;
01D5 85CA92     969            mov     _TMR3RL,_TMR2RL
01D8 E5CB       970            mov     a,(_TMR2RL >> 8)
01DA C592       971            xch     a,_TMR3RL
01DC 25E0       972            add     a,acc
01DE C592       973            xch     a,_TMR3RL
01E0 33         974            rlc     a
01E1 F593       975            mov     (_TMR3RL >> 8),a
01E3            976   ;        Tone_gen.c:224: TR2=1; // Start timer 2
01E3 D2CA       977            setb    _TR2
01E5            978   ;        Tone_gen.c:225: tmr2_origin = TMR2RL;  //store TMR2RL
01E5 E5CA       979            mov     a,_TMR2RL
01E7 E5CB       980            mov     a,(_TMR2RL >> 8)
01E9            981   ;        Tone_gen.c:226: f=SYSCLK/(2L*(0x10000L-TMR2RL));
01E9 AACA       982            mov     r2,_TMR2RL
01EB ABCB       983            mov     r3,(_TMR2RL >> 8)
01ED E4         984            clr     a
01EE FC         985            mov     r4,a
01EF FD         986            mov     r5,a
01F0 C3         987            clr     c
01F1 9A         988            subb    a,r2
01F2 FA         989            mov     r2,a
01F3 E4         990            clr     a
01F4 9B         991            subb    a,r3
01F5 FB         992            mov     r3,a
01F6 7401       993            mov     a,#0x01
01F8 9C         994            subb    a,r4
01F9 FC         995            mov     r4,a
01FA E4         996            clr     a
01FB 9D         997            subb    a,r5
01FC FD         998            mov     r5,a
01FD EA         999            mov     a,r2
01FE 2A        1000            add     a,r2
01FF F500      1001            mov     __divslong_PARM_2,a
0201 EB        1002            mov     a,r3
0202 33        1003            rlc     a
0203 F501      1004            mov     (__divslong_PARM_2 + 1),a
0205 EC        1005            mov     a,r4
0206 33        1006            rlc     a
0207 F502      1007            mov     (__divslong_PARM_2 + 2),a
0209 ED        1008            mov     a,r5
020A 33        1009            rlc     a
020B F503      1010            mov     (__divslong_PARM_2 + 3),a
020D 90A200    1011            mov     dptr,#0xA200
0210 75F04A    1012            mov     b,#0x4A
0213 7404      1013            mov     a,#0x04
0215 120000    1014            lcall   __divslong
0218 AA82      1015            mov     r2,dpl
021A AB83      1016            mov     r3,dph
021C ACF0      1017            mov     r4,b
021E FD        1018            mov     r5,a
021F 8AA8      1019            mov     _main_f_1_70,r2
0221 8BA9      1020            mov     (_main_f_1_70 + 1),r3
0223 8CAA      1021            mov     (_main_f_1_70 + 2),r4
0225 8DAB      1022            mov     (_main_f_1_70 + 3),r5
0227           1023   ;        Tone_gen.c:227: printf("\nActual frequency: %lu\n", f);
0227 C002      1024            push    ar2
0229 C003      1025            push    ar3
022B C004      1026            push    ar4
022D C005      1027            push    ar5
022F 7448      1028            mov     a,#__str_5
0231 C0E0      1029            push    acc
0233 74C2      1030            mov     a,#(__str_5 >> 8)
0235 C0E0      1031            push    acc
0237 7480      1032            mov     a,#0x80
0239 C0E0      1033            push    acc
023B 120000    1034            lcall   _printf
023E E581      1035            mov     a,sp
0240 24F9      1036            add     a,#0xf9
0242 F581      1037            mov     sp,a
0244           1038   L005003?:
0244           1039   ;        Tone_gen.c:232: printf("\n\nEFM8LB1 WII Nunchuck I2C Reader\n");
0244 7488      1040            mov     a,#__str_6
0246 C0E0      1041            push    acc
0248 74C2      1042            mov     a,#(__str_6 >> 8)
024A C0E0      1043            push    acc
024C 7480      1044            mov     a,#0x80
024E C0E0      1045            push    acc
0250 120000    1046            lcall   _printf
0253 1581      1047            dec     sp
0255 1581      1048            dec     sp
0257 1581      1049            dec     sp
0259           1050   ;        Tone_gen.c:234: "Check pins P2.0 and P1.7 with the oscilloscope.\r\n");
0259 74C8      1051            mov     a,#__str_7
025B C0E0      1052            push    acc
025D 74C2      1053            mov     a,#(__str_7 >> 8)
025F C0E0      1054            push    acc
0261 7480      1055            mov     a,#0x80
0263 C0E0      1056            push    acc
0265 120000    1057            lcall   _printf
0268 1581      1058            dec     sp
026A 1581      1059            dec     sp
026C 1581      1060            dec     sp
026E           1061   ;        Tone_gen.c:237: Timer4ms(200);
026E 7582C8    1062            mov     dpl,#0xC8
0271 120000    1063            lcall   _Timer4ms
0274           1064   ;        Tone_gen.c:239: nunchuck_init(1);
0274 D200      1065            setb    _nunchuck_init_PARM_1
0276 120000    1066            lcall   _nunchuck_init
0279           1067   ;        Tone_gen.c:240: Timer4ms(100);
0279 758264    1068            mov     dpl,#0x64
027C 120000    1069            lcall   _Timer4ms
027F           1070   ;        Tone_gen.c:243: nunchuck_getdata(rbuf);
027F 90B468    1071            mov     dptr,#_main_rbuf_1_70
0282 75F040    1072            mov     b,#0x40
0285 120000    1073            lcall   _nunchuck_getdata
0288           1074   ;        Tone_gen.c:245: off_x=(int)rbuf[0]-128;
0288 AA68      1075            mov     r2,_main_rbuf_1_70
028A 7B00      1076            mov     r3,#0x00
028C EA        1077            mov     a,r2
028D 2480      1078            add     a,#0x80
028F F598      1079            mov     _main_off_x_1_70,a
0291 EB        1080            mov     a,r3
0292 34FF      1081            addc    a,#0xff
0294 F599      1082            mov     (_main_off_x_1_70 + 1),a
0296           1083   ;        Tone_gen.c:246: off_y=(int)rbuf[1]-128;
0296 AC69      1084            mov     r4,(_main_rbuf_1_70 + 0x0001)
0298 7D00      1085            mov     r5,#0x00
029A EC        1086            mov     a,r4
029B 2480      1087            add     a,#0x80
029D F5E8      1088            mov     _main_off_y_1_70,a
029F ED        1089            mov     a,r5
02A0 34FF      1090            addc    a,#0xff
02A2 F5E9      1091            mov     (_main_off_y_1_70 + 1),a
02A4           1092   ;        Tone_gen.c:247: printf("Offset_X:%4d Offset_Y:%4d\n\n", off_x, off_y);
02A4 C0E8      1093            push    _main_off_y_1_70
02A6 C0E9      1094            push    (_main_off_y_1_70 + 1)
02A8 C098      1095            push    _main_off_x_1_70
02AA C099      1096            push    (_main_off_x_1_70 + 1)
02AC 7428      1097            mov     a,#__str_8
02AE C0E0      1098            push    acc
02B0 74C4      1099            mov     a,#(__str_8 >> 8)
02B2 C0E0      1100            push    acc
02B4 7480      1101            mov     a,#0x80
02B6 C0E0      1102            push    acc
02B8 120000    1103            lcall   _printf
02BB E581      1104            mov     a,sp
02BD 24F9      1105            add     a,#0xf9
02BF F581      1106            mov     sp,a
02C1           1107   ;        Tone_gen.c:249: while(1)
02C1           1108   L005102?:
02C1           1109   ;        Tone_gen.c:262: nunchuck_getdata(rbuf);
02C1 90B468    1110            mov     dptr,#_main_rbuf_1_70
02C4 75F040    1111            mov     b,#0x40
02C7 120000    1112            lcall   _nunchuck_getdata
02CA           1113   ;        Tone_gen.c:264: joy_x=(int)rbuf[0]-128-off_x;
02CA AE68      1114            mov     r6,_main_rbuf_1_70
02CC 7F00      1115            mov     r7,#0x00
02CE EE        1116            mov     a,r6
02CF 2480      1117            add     a,#0x80
02D1 FE        1118            mov     r6,a
02D2 EF        1119            mov     a,r7
02D3 34FF      1120            addc    a,#0xff
02D5 FF        1121            mov     r7,a
02D6 EE        1122            mov     a,r6
02D7 C3        1123            clr     c
02D8 9598      1124            subb    a,_main_off_x_1_70
02DA F5F8      1125            mov     _main_joy_x_1_70,a
02DC EF        1126            mov     a,r7
02DD 9599      1127            subb    a,(_main_off_x_1_70 + 1)
02DF F5F9      1128            mov     (_main_joy_x_1_70 + 1),a
02E1           1129   ;        Tone_gen.c:265: joy_y=(int)rbuf[1]-128-off_y;
02E1 AC69      1130            mov     r4,(_main_rbuf_1_70 + 0x0001)
02E3 7D00      1131            mov     r5,#0x00
02E5 EC        1132            mov     a,r4
02E6 2480      1133            add     a,#0x80
02E8 FC        1134            mov     r4,a
02E9 ED        1135            mov     a,r5
02EA 34FF      1136            addc    a,#0xff
02EC FD        1137            mov     r5,a
02ED EC        1138            mov     a,r4
02EE C3        1139            clr     c
02EF 95E8      1140            subb    a,_main_off_y_1_70
02F1 F548      1141            mov     _main_joy_y_1_70,a
02F3 ED        1142            mov     a,r5
02F4 95E9      1143            subb    a,(_main_off_y_1_70 + 1)
02F6 F549      1144            mov     (_main_joy_y_1_70 + 1),a
02F8           1145   ;        Tone_gen.c:266: acc_x=rbuf[2]*4; 
02F8 E56A      1146            mov     a,(_main_rbuf_1_70 + 0x0002)
02FA 75F004    1147            mov     b,#0x04
02FD A4        1148            mul     ab
02FE FA        1149            mov     r2,a
02FF ABF0      1150            mov     r3,b
0301           1151   ;        Tone_gen.c:267: acc_y=rbuf[3]*4;
0301 E56B      1152            mov     a,(_main_rbuf_1_70 + 0x0003)
0303 75F004    1153            mov     b,#0x04
0306 A4        1154            mul     ab
0307 F538      1155            mov     _main_acc_y_1_70,a
0309 85F039    1156            mov     (_main_acc_y_1_70 + 1),b
030C           1157   ;        Tone_gen.c:268: acc_z=rbuf[4]*4;
030C E56C      1158            mov     a,(_main_rbuf_1_70 + 0x0004)
030E 75F004    1159            mov     b,#0x04
0311 A4        1160            mul     ab
0312 F588      1161            mov     _main_acc_z_1_70,a
0314 85F089    1162            mov     (_main_acc_z_1_70 + 1),b
0317           1163   ;        Tone_gen.c:270: but1=(rbuf[5] & 0x01)?1:0;
0317 E56D      1164            mov     a,(_main_rbuf_1_70 + 0x0005)
0319 13        1165            rrc     a
031A 9208      1166            mov     _main_but1_1_70,c
031C           1167   ;        Tone_gen.c:271: but2=(rbuf[5] & 0x02)?1:0;
031C E56D      1168            mov     a,(_main_rbuf_1_70 + 0x0005)
031E A2E1      1169            mov     c,acc.1
0320 9248      1170            mov     _main_but2_1_70,c
0322           1171   ;        Tone_gen.c:272: if (rbuf[5] & 0x04) acc_x+=2;
0322 E56D      1172            mov     a,(_main_rbuf_1_70 + 0x0005)
0324 30E2A8    1173            jnb     acc.2,L005005?
0327 7402      1174            mov     a,#0x02
0329 2A        1175            add     a,r2
032A FA        1176            mov     r2,a
032B E4        1177            clr     a
032C 3B        1178            addc    a,r3
032D FB        1179            mov     r3,a
032E           1180   L005005?:
032E           1181   ;        Tone_gen.c:273: if (rbuf[5] & 0x08) acc_x+=1;
032E E56D      1182            mov     a,(_main_rbuf_1_70 + 0x0005)
0330 30E3E8    1183            jnb     acc.3,L005007?
0333 0A        1184            inc     r2
0334 BA0028    1185            cjne    r2,#0x00,L005198?
0337 0B        1186            inc     r3
0338           1187   L005198?:
0338           1188   L005007?:
0338           1189   ;        Tone_gen.c:274: if (rbuf[5] & 0x10) acc_y+=2;
0338 E56D      1190            mov     a,(_main_rbuf_1_70 + 0x0005)
033A 30E468    1191            jnb     acc.4,L005009?
033D 7402      1192            mov     a,#0x02
033F 2538      1193            add     a,_main_acc_y_1_70
0341 F538      1194            mov     _main_acc_y_1_70,a
0343 E4        1195            clr     a
0344 3539      1196            addc    a,(_main_acc_y_1_70 + 1)
0346 F539      1197            mov     (_main_acc_y_1_70 + 1),a
0348           1198   L005009?:
0348           1199   ;        Tone_gen.c:275: if (rbuf[5] & 0x20) acc_y+=1;
0348 E56D      1200            mov     a,(_main_rbuf_1_70 + 0x0005)
034A 30E5A8    1201            jnb     acc.5,L005011?
034D 0538      1202            inc     _main_acc_y_1_70
034F E4        1203            clr     a
0350 B538E8    1204            cjne    a,_main_acc_y_1_70,L005201?
0353 0539      1205            inc     (_main_acc_y_1_70 + 1)
0355           1206   L005201?:
0355           1207   L005011?:
0355           1208   ;        Tone_gen.c:276: if (rbuf[5] & 0x40) acc_z+=2;
0355 E56D      1209            mov     a,(_main_rbuf_1_70 + 0x0005)
0357 30E628    1210            jnb     acc.6,L005013?
035A 7402      1211            mov     a,#0x02
035C 2588      1212            add     a,_main_acc_z_1_70
035E F588      1213            mov     _main_acc_z_1_70,a
0360 E4        1214            clr     a
0361 3589      1215            addc    a,(_main_acc_z_1_70 + 1)
0363 F589      1216            mov     (_main_acc_z_1_70 + 1),a
0365           1217   L005013?:
0365           1218   ;        Tone_gen.c:277: if (rbuf[5] & 0x80) acc_z+=1;
0365 E56D      1219            mov     a,(_main_rbuf_1_70 + 0x0005)
0367 30E768    1220            jnb     acc.7,L005015?
036A 0588      1221            inc     _main_acc_z_1_70
036C E4        1222            clr     a
036D B588A8    1223            cjne    a,_main_acc_z_1_70,L005204?
0370 0589      1224            inc     (_main_acc_z_1_70 + 1)
0372           1225   L005204?:
0372           1226   L005015?:
0372           1227   ;        Tone_gen.c:281: LCDprint("mode:remote", 1, 1);
0372 750001    1228            mov     _LCDprint_PARM_2,#0x01
0375 D200      1229            setb    _LCDprint_PARM_3
0377 90C6E8    1230            mov     dptr,#__str_9
037A 75F080    1231            mov     b,#0x80
037D C002      1232            push    ar2
037F C003      1233            push    ar3
0381 120000    1234            lcall   _LCDprint
0384 D003      1235            pop     ar3
0386 D002      1236            pop     ar2
0388           1237   ;        Tone_gen.c:282: if(joy_x >= 80){
0388 C3        1238            clr     c
0389 E5F8      1239            mov     a,_main_joy_x_1_70
038B 9450      1240            subb    a,#0x50
038D E5F9      1241            mov     a,(_main_joy_x_1_70 + 1)
038F 6480      1242            xrl     a,#0x80
0391 9480      1243            subb    a,#0x80
0393 5000      1244            jnc     L005205?
0395 020000    1245            ljmp    L005032?
0398           1246   L005205?:
0398           1247   ;        Tone_gen.c:283: LCDprint("right", 2, 1);
0398 750002    1248            mov     _LCDprint_PARM_2,#0x02
039B D200      1249            setb    _LCDprint_PARM_3
039D 90C7A8    1250            mov     dptr,#__str_10
03A0 75F080    1251            mov     b,#0x80
03A3 C002      1252            push    ar2
03A5 C003      1253            push    ar3
03A7 120000    1254            lcall   _LCDprint
03AA D003      1255            pop     ar3
03AC D002      1256            pop     ar2
03AE           1257   ;        Tone_gen.c:284: right=1;
03AE 75D001    1258            mov     _right,#0x01
03B1 E4        1259            clr     a
03B2 F5D1      1260            mov     (_right + 1),a
03B4           1261   ;        Tone_gen.c:285: while(joy_x>=80){
03B4           1262   L005028?:
03B4 C3        1263            clr     c
03B5 E5F8      1264            mov     a,_main_joy_x_1_70
03B7 9450      1265            subb    a,#0x50
03B9 E5F9      1266            mov     a,(_main_joy_x_1_70 + 1)
03BB 6480      1267            xrl     a,#0x80
03BD 9480      1268            subb    a,#0x80
03BF 5000      1269            jnc     L005206?
03C1 020000    1270            ljmp    L005032?
03C4           1271   L005206?:
03C4           1272   ;        Tone_gen.c:286: nunchuck_getdata(rbuf);
03C4 90B468    1273            mov     dptr,#_main_rbuf_1_70
03C7 75F040    1274            mov     b,#0x40
03CA 120000    1275            lcall   _nunchuck_getdata
03CD           1276   ;        Tone_gen.c:288: joy_x=(int)rbuf[0]-128-off_x;
03CD 8568C8    1277            mov     _main_sloc0_1_0,_main_rbuf_1_70
03D0 75C900    1278            mov     (_main_sloc0_1_0 + 1),#0x00
03D3 E5C8      1279            mov     a,_main_sloc0_1_0
03D5 2480      1280            add     a,#0x80
03D7 F5C8      1281            mov     _main_sloc0_1_0,a
03D9 E5C9      1282            mov     a,(_main_sloc0_1_0 + 1)
03DB 34FF      1283            addc    a,#0xff
03DD F5C9      1284            mov     (_main_sloc0_1_0 + 1),a
03DF E5C8      1285            mov     a,_main_sloc0_1_0
03E1 C3        1286            clr     c
03E2 9598      1287            subb    a,_main_off_x_1_70
03E4 F5F8      1288            mov     _main_joy_x_1_70,a
03E6 E5C9      1289            mov     a,(_main_sloc0_1_0 + 1)
03E8 9599      1290            subb    a,(_main_off_x_1_70 + 1)
03EA F5F9      1291            mov     (_main_joy_x_1_70 + 1),a
03EC           1292   ;        Tone_gen.c:289: joy_y=(int)rbuf[1]-128-off_y;
03EC 8569C8    1293            mov     _main_sloc0_1_0,(_main_rbuf_1_70 + 0x0001)
03EF 75C900    1294            mov     (_main_sloc0_1_0 + 1),#0x00
03F2 E5C8      1295            mov     a,_main_sloc0_1_0
03F4 2480      1296            add     a,#0x80
03F6 F5C8      1297            mov     _main_sloc0_1_0,a
03F8 E5C9      1298            mov     a,(_main_sloc0_1_0 + 1)
03FA 34FF      1299            addc    a,#0xff
03FC F5C9      1300            mov     (_main_sloc0_1_0 + 1),a
03FE E5C8      1301            mov     a,_main_sloc0_1_0
0400 C3        1302            clr     c
0401 95E8      1303            subb    a,_main_off_y_1_70
0403 F548      1304            mov     _main_joy_y_1_70,a
0405 E5C9      1305            mov     a,(_main_sloc0_1_0 + 1)
0407 95E9      1306            subb    a,(_main_off_y_1_70 + 1)
0409 F549      1307            mov     (_main_joy_y_1_70 + 1),a
040B           1308   ;        Tone_gen.c:290: acc_x=rbuf[2]*4; 
040B E56A      1309            mov     a,(_main_rbuf_1_70 + 0x0002)
040D 75F004    1310            mov     b,#0x04
0410 A4        1311            mul     ab
0411 FA        1312            mov     r2,a
0412 ABF0      1313            mov     r3,b
0414           1314   ;        Tone_gen.c:291: acc_y=rbuf[3]*4;
0414 E56B      1315            mov     a,(_main_rbuf_1_70 + 0x0003)
0416 75F004    1316            mov     b,#0x04
0419 A4        1317            mul     ab
041A F538      1318            mov     _main_acc_y_1_70,a
041C 85F039    1319            mov     (_main_acc_y_1_70 + 1),b
041F           1320   ;        Tone_gen.c:292: acc_z=rbuf[4]*4;
041F E56C      1321            mov     a,(_main_rbuf_1_70 + 0x0004)
0421 75F004    1322            mov     b,#0x04
0424 A4        1323            mul     ab
0425 F588      1324            mov     _main_acc_z_1_70,a
0427 85F089    1325            mov     (_main_acc_z_1_70 + 1),b
042A           1326   ;        Tone_gen.c:294: but1=(rbuf[5] & 0x01)?1:0;
042A E56D      1327            mov     a,(_main_rbuf_1_70 + 0x0005)
042C 13        1328            rrc     a
042D 9208      1329            mov     _main_but1_1_70,c
042F           1330   ;        Tone_gen.c:295: but2=(rbuf[5] & 0x02)?1:0;
042F E56D      1331            mov     a,(_main_rbuf_1_70 + 0x0005)
0431 A2E1      1332            mov     c,acc.1
0433 9248      1333            mov     _main_but2_1_70,c
0435           1334   ;        Tone_gen.c:296: if (rbuf[5] & 0x04) acc_x+=2;
0435 E56D      1335            mov     a,(_main_rbuf_1_70 + 0x0005)
0437 30E268    1336            jnb     acc.2,L005017?
043A 7402      1337            mov     a,#0x02
043C 2A        1338            add     a,r2
043D FA        1339            mov     r2,a
043E E4        1340            clr     a
043F 3B        1341            addc    a,r3
0440 FB        1342            mov     r3,a
0441           1343   L005017?:
0441           1344   ;        Tone_gen.c:297: if (rbuf[5] & 0x08) acc_x+=1;
0441 E56D      1345            mov     a,(_main_rbuf_1_70 + 0x0005)
0443 30E3A8    1346            jnb     acc.3,L005019?
0446 0A        1347            inc     r2
0447 BA00E8    1348            cjne    r2,#0x00,L005209?
044A 0B        1349            inc     r3
044B           1350   L005209?:
044B           1351   L005019?:
044B           1352   ;        Tone_gen.c:298: if (rbuf[5] & 0x10) acc_y+=2;
044B E56D      1353            mov     a,(_main_rbuf_1_70 + 0x0005)
044D 30E428    1354            jnb     acc.4,L005021?
0450 7402      1355            mov     a,#0x02
0452 2538      1356            add     a,_main_acc_y_1_70
0454 F538      1357            mov     _main_acc_y_1_70,a
0456 E4        1358            clr     a
0457 3539      1359            addc    a,(_main_acc_y_1_70 + 1)
0459 F539      1360            mov     (_main_acc_y_1_70 + 1),a
045B           1361   L005021?:
045B           1362   ;        Tone_gen.c:299: if (rbuf[5] & 0x20) acc_y+=1;
045B E56D      1363            mov     a,(_main_rbuf_1_70 + 0x0005)
045D 30E568    1364            jnb     acc.5,L005023?
0460 0538      1365            inc     _main_acc_y_1_70
0462 E4        1366            clr     a
0463 B538A8    1367            cjne    a,_main_acc_y_1_70,L005212?
0466 0539      1368            inc     (_main_acc_y_1_70 + 1)
0468           1369   L005212?:
0468           1370   L005023?:
0468           1371   ;        Tone_gen.c:300: if (rbuf[5] & 0x40) acc_z+=2;
0468 E56D      1372            mov     a,(_main_rbuf_1_70 + 0x0005)
046A 30E6E8    1373            jnb     acc.6,L005025?
046D 7402      1374            mov     a,#0x02
046F 2588      1375            add     a,_main_acc_z_1_70
0471 F588      1376            mov     _main_acc_z_1_70,a
0473 E4        1377            clr     a
0474 3589      1378            addc    a,(_main_acc_z_1_70 + 1)
0476 F589      1379            mov     (_main_acc_z_1_70 + 1),a
0478           1380   L005025?:
0478           1381   ;        Tone_gen.c:301: if (rbuf[5] & 0x80) acc_z+=1;
0478 E56D      1382            mov     a,(_main_rbuf_1_70 + 0x0005)
047A 30E728    1383            jnb     acc.7,L005027?
047D 0588      1384            inc     _main_acc_z_1_70
047F E4        1385            clr     a
0480 B58868    1386            cjne    a,_main_acc_z_1_70,L005215?
0483 0589      1387            inc     (_main_acc_z_1_70 + 1)
0485           1388   L005215?:
0485           1389   L005027?:
0485           1390   ;        Tone_gen.c:304: but1?'1':'0', but2?'1':'0', joy_x, joy_y, acc_x, acc_y, acc_z);
0485 3048A8    1391            jnb     _main_but2_1_70,L005106?
0488 7E31      1392            mov     r6,#0x31
048A 8000      1393            sjmp    L005107?
048C           1394   L005106?:
048C 7E30      1395            mov     r6,#0x30
048E           1396   L005107?:
048E EE        1397            mov     a,r6
048F 33        1398            rlc     a
0490 95E0      1399            subb    a,acc
0492 FF        1400            mov     r7,a
0493 300828    1401            jnb     _main_but1_1_70,L005108?
0496 75C831    1402            mov     _main_sloc0_1_0,#0x31
0499 8000      1403            sjmp    L005109?
049B           1404   L005108?:
049B 75C830    1405            mov     _main_sloc0_1_0,#0x30
049E           1406   L005109?:
049E E5C8      1407            mov     a,_main_sloc0_1_0
04A0 FC        1408            mov     r4,a
04A1 33        1409            rlc     a
04A2 95E0      1410            subb    a,acc
04A4 FD        1411            mov     r5,a
04A5           1412   ;        Tone_gen.c:303: printf("Buttons(Z:%c, C:%c) Joystick(%4d, %4d) Accelerometer(%3d, %3d, %3d)\x1b[0J\r",
04A5 C002      1413            push    ar2
04A7 C003      1414            push    ar3
04A9 C088      1415            push    _main_acc_z_1_70
04AB C089      1416            push    (_main_acc_z_1_70 + 1)
04AD C038      1417            push    _main_acc_y_1_70
04AF C039      1418            push    (_main_acc_y_1_70 + 1)
04B1 C002      1419            push    ar2
04B3 C003      1420            push    ar3
04B5 C048      1421            push    _main_joy_y_1_70
04B7 C049      1422            push    (_main_joy_y_1_70 + 1)
04B9 C0F8      1423            push    _main_joy_x_1_70
04BB C0F9      1424            push    (_main_joy_x_1_70 + 1)
04BD C006      1425            push    ar6
04BF C007      1426            push    ar7
04C1 C004      1427            push    ar4
04C3 C005      1428            push    ar5
04C5 74A8      1429            mov     a,#__str_11
04C7 C0E0      1430            push    acc
04C9 74CB      1431            mov     a,#(__str_11 >> 8)
04CB C0E0      1432            push    acc
04CD 7480      1433            mov     a,#0x80
04CF C0E0      1434            push    acc
04D1 120000    1435            lcall   _printf
04D4 E581      1436            mov     a,sp
04D6 24EF      1437            add     a,#0xef
04D8 F581      1438            mov     sp,a
04DA           1439   ;        Tone_gen.c:306: Timer4ms(100);
04DA 758264    1440            mov     dpl,#0x64
04DD 120000    1441            lcall   _Timer4ms
04E0 D003      1442            pop     ar3
04E2 D002      1443            pop     ar2
04E4           1444   ;        Tone_gen.c:307: counter =4;
04E4 75D004    1445            mov     _counter,#0x04
04E7 E4        1446            clr     a
04E8 F5D1      1447            mov     (_counter + 1),a
04EA 020000    1448            ljmp    L005028?
04ED           1449   L005032?:
04ED           1450   ;        Tone_gen.c:310: right=0;
04ED           1451   ;        Tone_gen.c:311: counter = 0;
04ED E4        1452            clr     a
04EE F5D0      1453            mov     _right,a
04F0 F5D1      1454            mov     (_right + 1),a
04F2 F5D0      1455            mov     _counter,a
04F4 F5D1      1456            mov     (_counter + 1),a
04F6           1457   ;        Tone_gen.c:313: if(joy_x <= -80){
04F6 C3        1458            clr     c
04F7 74B0      1459            mov     a,#0xB0
04F9 95F8      1460            subb    a,_main_joy_x_1_70
04FB 747F      1461            mov     a,#(0xFF ^ 0x80)
04FD 85F9F0    1462            mov     b,(_main_joy_x_1_70 + 1)
0500 63F080    1463            xrl     b,#0x80
0503 95F0      1464            subb    a,b
0505 5000      1465            jnc     L005218?
0507 020000    1466            ljmp    L005049?
050A           1467   L005218?:
050A           1468   ;        Tone_gen.c:314: LCDprint("left", 2, 1);
050A 750002    1469            mov     _LCDprint_PARM_2,#0x02
050D D200      1470            setb    _LCDprint_PARM_3
050F 90CC68    1471            mov     dptr,#__str_12
0512 75F080    1472            mov     b,#0x80
0515 C002      1473            push    ar2
0517 C003      1474            push    ar3
0519 120000    1475            lcall   _LCDprint
051C D003      1476            pop     ar3
051E D002      1477            pop     ar2
0520           1478   ;        Tone_gen.c:316: left=1;
0520 759001    1479            mov     _left,#0x01
0523 E4        1480            clr     a
0524 F591      1481            mov     (_left + 1),a
0526           1482   ;        Tone_gen.c:317: while(joy_x <=-80){
0526           1483   L005045?:
0526 C3        1484            clr     c
0527 74B0      1485            mov     a,#0xB0
0529 95F8      1486            subb    a,_main_joy_x_1_70
052B 747F      1487            mov     a,#(0xFF ^ 0x80)
052D 85F9F0    1488            mov     b,(_main_joy_x_1_70 + 1)
0530 63F080    1489            xrl     b,#0x80
0533 95F0      1490            subb    a,b
0535 5000      1491            jnc     L005219?
0537 020000    1492            ljmp    L005049?
053A           1493   L005219?:
053A           1494   ;        Tone_gen.c:318: nunchuck_getdata(rbuf);
053A 90B468    1495            mov     dptr,#_main_rbuf_1_70
053D 75F040    1496            mov     b,#0x40
0540 120000    1497            lcall   _nunchuck_getdata
0543           1498   ;        Tone_gen.c:320: joy_x=(int)rbuf[0]-128-off_x;
0543 AC68      1499            mov     r4,_main_rbuf_1_70
0545 7D00      1500            mov     r5,#0x00
0547 EC        1501            mov     a,r4
0548 2480      1502            add     a,#0x80
054A FC        1503            mov     r4,a
054B ED        1504            mov     a,r5
054C 34FF      1505            addc    a,#0xff
054E FD        1506            mov     r5,a
054F EC        1507            mov     a,r4
0550 C3        1508            clr     c
0551 9598      1509            subb    a,_main_off_x_1_70
0553 F5F8      1510            mov     _main_joy_x_1_70,a
0555 ED        1511            mov     a,r5
0556 9599      1512            subb    a,(_main_off_x_1_70 + 1)
0558 F5F9      1513            mov     (_main_joy_x_1_70 + 1),a
055A           1514   ;        Tone_gen.c:321: joy_y=(int)rbuf[1]-128-off_y;
055A AC69      1515            mov     r4,(_main_rbuf_1_70 + 0x0001)
055C 7D00      1516            mov     r5,#0x00
055E EC        1517            mov     a,r4
055F 2480      1518            add     a,#0x80
0561 FC        1519            mov     r4,a
0562 ED        1520            mov     a,r5
0563 34FF      1521            addc    a,#0xff
0565 FD        1522            mov     r5,a
0566 EC        1523            mov     a,r4
0567 C3        1524            clr     c
0568 95E8      1525            subb    a,_main_off_y_1_70
056A F548      1526            mov     _main_joy_y_1_70,a
056C ED        1527            mov     a,r5
056D 95E9      1528            subb    a,(_main_off_y_1_70 + 1)
056F F549      1529            mov     (_main_joy_y_1_70 + 1),a
0571           1530   ;        Tone_gen.c:322: acc_x=rbuf[2]*4; 
0571 E56A      1531            mov     a,(_main_rbuf_1_70 + 0x0002)
0573 75F004    1532            mov     b,#0x04
0576 A4        1533            mul     ab
0577 FA        1534            mov     r2,a
0578 ABF0      1535            mov     r3,b
057A           1536   ;        Tone_gen.c:323: acc_y=rbuf[3]*4;
057A E56B      1537            mov     a,(_main_rbuf_1_70 + 0x0003)
057C 75F004    1538            mov     b,#0x04
057F A4        1539            mul     ab
0580 F538      1540            mov     _main_acc_y_1_70,a
0582 85F039    1541            mov     (_main_acc_y_1_70 + 1),b
0585           1542   ;        Tone_gen.c:324: acc_z=rbuf[4]*4;
0585 E56C      1543            mov     a,(_main_rbuf_1_70 + 0x0004)
0587 75F004    1544            mov     b,#0x04
058A A4        1545            mul     ab
058B F588      1546            mov     _main_acc_z_1_70,a
058D 85F089    1547            mov     (_main_acc_z_1_70 + 1),b
0590           1548   ;        Tone_gen.c:326: but1=(rbuf[5] & 0x01)?1:0;
0590 E56D      1549            mov     a,(_main_rbuf_1_70 + 0x0005)
0592 13        1550            rrc     a
0593 9208      1551            mov     _main_but1_1_70,c
0595           1552   ;        Tone_gen.c:327: but2=(rbuf[5] & 0x02)?1:0;
0595 E56D      1553            mov     a,(_main_rbuf_1_70 + 0x0005)
0597 A2E1      1554            mov     c,acc.1
0599 9248      1555            mov     _main_but2_1_70,c
059B           1556   ;        Tone_gen.c:328: if (rbuf[5] & 0x04) acc_x+=2;
059B E56D      1557            mov     a,(_main_rbuf_1_70 + 0x0005)
059D 30E228    1558            jnb     acc.2,L005034?
05A0 7402      1559            mov     a,#0x02
05A2 2A        1560            add     a,r2
05A3 FA        1561            mov     r2,a
05A4 E4        1562            clr     a
05A5 3B        1563            addc    a,r3
05A6 FB        1564            mov     r3,a
05A7           1565   L005034?:
05A7           1566   ;        Tone_gen.c:329: if (rbuf[5] & 0x08) acc_x+=1;
05A7 E56D      1567            mov     a,(_main_rbuf_1_70 + 0x0005)
05A9 30E368    1568            jnb     acc.3,L005036?
05AC 0A        1569            inc     r2
05AD BA00A8    1570            cjne    r2,#0x00,L005222?
05B0 0B        1571            inc     r3
05B1           1572   L005222?:
05B1           1573   L005036?:
05B1           1574   ;        Tone_gen.c:330: if (rbuf[5] & 0x10) acc_y+=2;
05B1 E56D      1575            mov     a,(_main_rbuf_1_70 + 0x0005)
05B3 30E4E8    1576            jnb     acc.4,L005038?
05B6 7402      1577            mov     a,#0x02
05B8 2538      1578            add     a,_main_acc_y_1_70
05BA F538      1579            mov     _main_acc_y_1_70,a
05BC E4        1580            clr     a
05BD 3539      1581            addc    a,(_main_acc_y_1_70 + 1)
05BF F539      1582            mov     (_main_acc_y_1_70 + 1),a
05C1           1583   L005038?:
05C1           1584   ;        Tone_gen.c:331: if (rbuf[5] & 0x20) acc_y+=1;
05C1 E56D      1585            mov     a,(_main_rbuf_1_70 + 0x0005)
05C3 30E528    1586            jnb     acc.5,L005040?
05C6 0538      1587            inc     _main_acc_y_1_70
05C8 E4        1588            clr     a
05C9 B53868    1589            cjne    a,_main_acc_y_1_70,L005225?
05CC 0539      1590            inc     (_main_acc_y_1_70 + 1)
05CE           1591   L005225?:
05CE           1592   L005040?:
05CE           1593   ;        Tone_gen.c:332: if (rbuf[5] & 0x40) acc_z+=2;
05CE E56D      1594            mov     a,(_main_rbuf_1_70 + 0x0005)
05D0 30E6A8    1595            jnb     acc.6,L005042?
05D3 7402      1596            mov     a,#0x02
05D5 2588      1597            add     a,_main_acc_z_1_70
05D7 F588      1598            mov     _main_acc_z_1_70,a
05D9 E4        1599            clr     a
05DA 3589      1600            addc    a,(_main_acc_z_1_70 + 1)
05DC F589      1601            mov     (_main_acc_z_1_70 + 1),a
05DE           1602   L005042?:
05DE           1603   ;        Tone_gen.c:333: if (rbuf[5] & 0x80) acc_z+=1;
05DE E56D      1604            mov     a,(_main_rbuf_1_70 + 0x0005)
05E0 30E7E8    1605            jnb     acc.7,L005044?
05E3 0588      1606            inc     _main_acc_z_1_70
05E5 E4        1607            clr     a
05E6 B58828    1608            cjne    a,_main_acc_z_1_70,L005228?
05E9 0589      1609            inc     (_main_acc_z_1_70 + 1)
05EB           1610   L005228?:
05EB           1611   L005044?:
05EB           1612   ;        Tone_gen.c:336: but1?'1':'0', but2?'1':'0', joy_x, joy_y, acc_x, acc_y, acc_z);
05EB 304868    1613            jnb     _main_but2_1_70,L005110?
05EE 7C31      1614            mov     r4,#0x31
05F0 8000      1615            sjmp    L005111?
05F2           1616   L005110?:
05F2 7C30      1617            mov     r4,#0x30
05F4           1618   L005111?:
05F4 EC        1619            mov     a,r4
05F5 33        1620            rlc     a
05F6 95E0      1621            subb    a,acc
05F8 FD        1622            mov     r5,a
05F9 3008E8    1623            jnb     _main_but1_1_70,L005112?
05FC 7E31      1624            mov     r6,#0x31
05FE 8000      1625            sjmp    L005113?
0600           1626   L005112?:
0600 7E30      1627            mov     r6,#0x30
0602           1628   L005113?:
0602 EE        1629            mov     a,r6
0603 33        1630            rlc     a
0604 95E0      1631            subb    a,acc
0606 FF        1632            mov     r7,a
0607           1633   ;        Tone_gen.c:335: printf("Buttons(Z:%c, C:%c) Joystick(%4d, %4d) Accelerometer(%3d, %3d, %3d)\x1b[0J\r",
0607 C002      1634            push    ar2
0609 C003      1635            push    ar3
060B C088      1636            push    _main_acc_z_1_70
060D C089      1637            push    (_main_acc_z_1_70 + 1)
060F C038      1638            push    _main_acc_y_1_70
0611 C039      1639            push    (_main_acc_y_1_70 + 1)
0613 C002      1640            push    ar2
0615 C003      1641            push    ar3
0617 C048      1642            push    _main_joy_y_1_70
0619 C049      1643            push    (_main_joy_y_1_70 + 1)
061B C0F8      1644            push    _main_joy_x_1_70
061D C0F9      1645            push    (_main_joy_x_1_70 + 1)
061F C004      1646            push    ar4
0621 C005      1647            push    ar5
0623 C006      1648            push    ar6
0625 C007      1649            push    ar7
0627 74A8      1650            mov     a,#__str_11
0629 C0E0      1651            push    acc
062B 74CB      1652            mov     a,#(__str_11 >> 8)
062D C0E0      1653            push    acc
062F 7480      1654            mov     a,#0x80
0631 C0E0      1655            push    acc
0633 120000    1656            lcall   _printf
0636 E581      1657            mov     a,sp
0638 24EF      1658            add     a,#0xef
063A F581      1659            mov     sp,a
063C           1660   ;        Tone_gen.c:338: Timer4ms(100);
063C 758264    1661            mov     dpl,#0x64
063F 120000    1662            lcall   _Timer4ms
0642 D003      1663            pop     ar3
0644 D002      1664            pop     ar2
0646           1665   ;        Tone_gen.c:339: counter =3;
0646 75D003    1666            mov     _counter,#0x03
0649 E4        1667            clr     a
064A F5D1      1668            mov     (_counter + 1),a
064C 020000    1669            ljmp    L005045?
064F           1670   L005049?:
064F           1671   ;        Tone_gen.c:342: left=0;
064F           1672   ;        Tone_gen.c:343: counter=0;
064F E4        1673            clr     a
0650 F590      1674            mov     _left,a
0652 F591      1675            mov     (_left + 1),a
0654 F5D0      1676            mov     _counter,a
0656 F5D1      1677            mov     (_counter + 1),a
0658           1678   ;        Tone_gen.c:346: if(joy_y >= 80){
0658 C3        1679            clr     c
0659 E548      1680            mov     a,_main_joy_y_1_70
065B 9450      1681            subb    a,#0x50
065D E549      1682            mov     a,(_main_joy_y_1_70 + 1)
065F 6480      1683            xrl     a,#0x80
0661 9480      1684            subb    a,#0x80
0663 5000      1685            jnc     L005231?
0665 020000    1686            ljmp    L005066?
0668           1687   L005231?:
0668           1688   ;        Tone_gen.c:347: LCDprint("forward", 2, 1);
0668 750002    1689            mov     _LCDprint_PARM_2,#0x02
066B D200      1690            setb    _LCDprint_PARM_3
066D 90D0E8    1691            mov     dptr,#__str_13
0670 75F080    1692            mov     b,#0x80
0673 C002      1693            push    ar2
0675 C003      1694            push    ar3
0677 120000    1695            lcall   _LCDprint
067A D003      1696            pop     ar3
067C D002      1697            pop     ar2
067E           1698   ;        Tone_gen.c:349: forward=1;
067E 755001    1699            mov     _forward,#0x01
0681 E4        1700            clr     a
0682 F551      1701            mov     (_forward + 1),a
0684           1702   ;        Tone_gen.c:350: while(joy_y>80){
0684           1703   L005062?:
0684 C3        1704            clr     c
0685 7450      1705            mov     a,#0x50
0687 9548      1706            subb    a,_main_joy_y_1_70
0689 E4        1707            clr     a
068A 6480      1708            xrl     a,#0x80
068C 8549F0    1709            mov     b,(_main_joy_y_1_70 + 1)
068F 63F080    1710            xrl     b,#0x80
0692 95F0      1711            subb    a,b
0694 4000      1712            jc      L005232?
0696 020000    1713            ljmp    L005066?
0699           1714   L005232?:
0699           1715   ;        Tone_gen.c:351: nunchuck_getdata(rbuf);
0699 90B468    1716            mov     dptr,#_main_rbuf_1_70
069C 75F040    1717            mov     b,#0x40
069F 120000    1718            lcall   _nunchuck_getdata
06A2           1719   ;        Tone_gen.c:353: joy_x=(int)rbuf[0]-128-off_x;
06A2 AC68      1720            mov     r4,_main_rbuf_1_70
06A4 7D00      1721            mov     r5,#0x00
06A6 EC        1722            mov     a,r4
06A7 2480      1723            add     a,#0x80
06A9 FC        1724            mov     r4,a
06AA ED        1725            mov     a,r5
06AB 34FF      1726            addc    a,#0xff
06AD FD        1727            mov     r5,a
06AE EC        1728            mov     a,r4
06AF C3        1729            clr     c
06B0 9598      1730            subb    a,_main_off_x_1_70
06B2 F5F8      1731            mov     _main_joy_x_1_70,a
06B4 ED        1732            mov     a,r5
06B5 9599      1733            subb    a,(_main_off_x_1_70 + 1)
06B7 F5F9      1734            mov     (_main_joy_x_1_70 + 1),a
06B9           1735   ;        Tone_gen.c:354: joy_y=(int)rbuf[1]-128-off_y;
06B9 AC69      1736            mov     r4,(_main_rbuf_1_70 + 0x0001)
06BB 7D00      1737            mov     r5,#0x00
06BD EC        1738            mov     a,r4
06BE 2480      1739            add     a,#0x80
06C0 FC        1740            mov     r4,a
06C1 ED        1741            mov     a,r5
06C2 34FF      1742            addc    a,#0xff
06C4 FD        1743            mov     r5,a
06C5 EC        1744            mov     a,r4
06C6 C3        1745            clr     c
06C7 95E8      1746            subb    a,_main_off_y_1_70
06C9 F548      1747            mov     _main_joy_y_1_70,a
06CB ED        1748            mov     a,r5
06CC 95E9      1749            subb    a,(_main_off_y_1_70 + 1)
06CE F549      1750            mov     (_main_joy_y_1_70 + 1),a
06D0           1751   ;        Tone_gen.c:355: acc_x=rbuf[2]*4; 
06D0 E56A      1752            mov     a,(_main_rbuf_1_70 + 0x0002)
06D2 75F004    1753            mov     b,#0x04
06D5 A4        1754            mul     ab
06D6 FA        1755            mov     r2,a
06D7 ABF0      1756            mov     r3,b
06D9           1757   ;        Tone_gen.c:356: acc_y=rbuf[3]*4;
06D9 E56B      1758            mov     a,(_main_rbuf_1_70 + 0x0003)
06DB 75F004    1759            mov     b,#0x04
06DE A4        1760            mul     ab
06DF F538      1761            mov     _main_acc_y_1_70,a
06E1 85F039    1762            mov     (_main_acc_y_1_70 + 1),b
06E4           1763   ;        Tone_gen.c:357: acc_z=rbuf[4]*4;
06E4 E56C      1764            mov     a,(_main_rbuf_1_70 + 0x0004)
06E6 75F004    1765            mov     b,#0x04
06E9 A4        1766            mul     ab
06EA F588      1767            mov     _main_acc_z_1_70,a
06EC 85F089    1768            mov     (_main_acc_z_1_70 + 1),b
06EF           1769   ;        Tone_gen.c:359: but1=(rbuf[5] & 0x01)?1:0;
06EF E56D      1770            mov     a,(_main_rbuf_1_70 + 0x0005)
06F1 13        1771            rrc     a
06F2 9208      1772            mov     _main_but1_1_70,c
06F4           1773   ;        Tone_gen.c:360: but2=(rbuf[5] & 0x02)?1:0;
06F4 E56D      1774            mov     a,(_main_rbuf_1_70 + 0x0005)
06F6 A2E1      1775            mov     c,acc.1
06F8 9248      1776            mov     _main_but2_1_70,c
06FA           1777   ;        Tone_gen.c:361: if (rbuf[5] & 0x04) acc_x+=2;
06FA E56D      1778            mov     a,(_main_rbuf_1_70 + 0x0005)
06FC 30E2A8    1779            jnb     acc.2,L005051?
06FF 7402      1780            mov     a,#0x02
0701 2A        1781            add     a,r2
0702 FA        1782            mov     r2,a
0703 E4        1783            clr     a
0704 3B        1784            addc    a,r3
0705 FB        1785            mov     r3,a
0706           1786   L005051?:
0706           1787   ;        Tone_gen.c:362: if (rbuf[5] & 0x08) acc_x+=1;
0706 E56D      1788            mov     a,(_main_rbuf_1_70 + 0x0005)
0708 30E3E8    1789            jnb     acc.3,L005053?
070B 0A        1790            inc     r2
070C BA0028    1791            cjne    r2,#0x00,L005235?
070F 0B        1792            inc     r3
0710           1793   L005235?:
0710           1794   L005053?:
0710           1795   ;        Tone_gen.c:363: if (rbuf[5] & 0x10) acc_y+=2;
0710 E56D      1796            mov     a,(_main_rbuf_1_70 + 0x0005)
0712 30E468    1797            jnb     acc.4,L005055?
0715 7402      1798            mov     a,#0x02
0717 2538      1799            add     a,_main_acc_y_1_70
0719 F538      1800            mov     _main_acc_y_1_70,a
071B E4        1801            clr     a
071C 3539      1802            addc    a,(_main_acc_y_1_70 + 1)
071E F539      1803            mov     (_main_acc_y_1_70 + 1),a
0720           1804   L005055?:
0720           1805   ;        Tone_gen.c:364: if (rbuf[5] & 0x20) acc_y+=1;
0720 E56D      1806            mov     a,(_main_rbuf_1_70 + 0x0005)
0722 30E5A8    1807            jnb     acc.5,L005057?
0725 0538      1808            inc     _main_acc_y_1_70
0727 E4        1809            clr     a
0728 B538E8    1810            cjne    a,_main_acc_y_1_70,L005238?
072B 0539      1811            inc     (_main_acc_y_1_70 + 1)
072D           1812   L005238?:
072D           1813   L005057?:
072D           1814   ;        Tone_gen.c:365: if (rbuf[5] & 0x40) acc_z+=2;
072D E56D      1815            mov     a,(_main_rbuf_1_70 + 0x0005)
072F 30E628    1816            jnb     acc.6,L005059?
0732 7402      1817            mov     a,#0x02
0734 2588      1818            add     a,_main_acc_z_1_70
0736 F588      1819            mov     _main_acc_z_1_70,a
0738 E4        1820            clr     a
0739 3589      1821            addc    a,(_main_acc_z_1_70 + 1)
073B F589      1822            mov     (_main_acc_z_1_70 + 1),a
073D           1823   L005059?:
073D           1824   ;        Tone_gen.c:366: if (rbuf[5] & 0x80) acc_z+=1;
073D E56D      1825            mov     a,(_main_rbuf_1_70 + 0x0005)
073F 30E768    1826            jnb     acc.7,L005061?
0742 0588      1827            inc     _main_acc_z_1_70
0744 E4        1828            clr     a
0745 B588A8    1829            cjne    a,_main_acc_z_1_70,L005241?
0748 0589      1830            inc     (_main_acc_z_1_70 + 1)
074A           1831   L005241?:
074A           1832   L005061?:
074A           1833   ;        Tone_gen.c:369: but1?'1':'0', but2?'1':'0', joy_x, joy_y, acc_x, acc_y, acc_z);
074A 3048E8    1834            jnb     _main_but2_1_70,L005114?
074D 7C31      1835            mov     r4,#0x31
074F 8000      1836            sjmp    L005115?
0751           1837   L005114?:
0751 7C30      1838            mov     r4,#0x30
0753           1839   L005115?:
0753 EC        1840            mov     a,r4
0754 33        1841            rlc     a
0755 95E0      1842            subb    a,acc
0757 FD        1843            mov     r5,a
0758 300868    1844            jnb     _main_but1_1_70,L005116?
075B 7E31      1845            mov     r6,#0x31
075D 8000      1846            sjmp    L005117?
075F           1847   L005116?:
075F 7E30      1848            mov     r6,#0x30
0761           1849   L005117?:
0761 EE        1850            mov     a,r6
0762 33        1851            rlc     a
0763 95E0      1852            subb    a,acc
0765 FF        1853            mov     r7,a
0766           1854   ;        Tone_gen.c:368: printf("Buttons(Z:%c, C:%c) Joystick(%4d, %4d) Accelerometer(%3d, %3d, %3d)\x1b[0J\r",
0766 C002      1855            push    ar2
0768 C003      1856            push    ar3
076A C088      1857            push    _main_acc_z_1_70
076C C089      1858            push    (_main_acc_z_1_70 + 1)
076E C038      1859            push    _main_acc_y_1_70
0770 C039      1860            push    (_main_acc_y_1_70 + 1)
0772 C002      1861            push    ar2
0774 C003      1862            push    ar3
0776 C048      1863            push    _main_joy_y_1_70
0778 C049      1864            push    (_main_joy_y_1_70 + 1)
077A C0F8      1865            push    _main_joy_x_1_70
077C C0F9      1866            push    (_main_joy_x_1_70 + 1)
077E C004      1867            push    ar4
0780 C005      1868            push    ar5
0782 C006      1869            push    ar6
0784 C007      1870            push    ar7
0786 74A8      1871            mov     a,#__str_11
0788 C0E0      1872            push    acc
078A 74CB      1873            mov     a,#(__str_11 >> 8)
078C C0E0      1874            push    acc
078E 7480      1875            mov     a,#0x80
0790 C0E0      1876            push    acc
0792 120000    1877            lcall   _printf
0795 E581      1878            mov     a,sp
0797 24EF      1879            add     a,#0xef
0799 F581      1880            mov     sp,a
079B           1881   ;        Tone_gen.c:371: Timer4ms(100);
079B 758264    1882            mov     dpl,#0x64
079E 120000    1883            lcall   _Timer4ms
07A1 D003      1884            pop     ar3
07A3 D002      1885            pop     ar2
07A5           1886   ;        Tone_gen.c:372: counter =1;
07A5 75D001    1887            mov     _counter,#0x01
07A8 E4        1888            clr     a
07A9 F5D1      1889            mov     (_counter + 1),a
07AB 020000    1890            ljmp    L005062?
07AE           1891   L005066?:
07AE           1892   ;        Tone_gen.c:376: forward=0;
07AE           1893   ;        Tone_gen.c:377: counter = 0;
07AE E4        1894            clr     a
07AF F550      1895            mov     _forward,a
07B1 F551      1896            mov     (_forward + 1),a
07B3 F5D0      1897            mov     _counter,a
07B5 F5D1      1898            mov     (_counter + 1),a
07B7           1899   ;        Tone_gen.c:379: if(joy_y <= -80){
07B7 C3        1900            clr     c
07B8 74B0      1901            mov     a,#0xB0
07BA 9548      1902            subb    a,_main_joy_y_1_70
07BC 747F      1903            mov     a,#(0xFF ^ 0x80)
07BE 8549F0    1904            mov     b,(_main_joy_y_1_70 + 1)
07C1 63F080    1905            xrl     b,#0x80
07C4 95F0      1906            subb    a,b
07C6 5000      1907            jnc     L005244?
07C8 020000    1908            ljmp    L005083?
07CB           1909   L005244?:
07CB           1910   ;        Tone_gen.c:380: LCDprint("backward", 2, 1);
07CB 750002    1911            mov     _LCDprint_PARM_2,#0x02
07CE D200      1912            setb    _LCDprint_PARM_3
07D0 90D568    1913            mov     dptr,#__str_14
07D3 75F080    1914            mov     b,#0x80
07D6 C002      1915            push    ar2
07D8 C003      1916            push    ar3
07DA 120000    1917            lcall   _LCDprint
07DD D003      1918            pop     ar3
07DF D002      1919            pop     ar2
07E1           1920   ;        Tone_gen.c:382: backward=1;
07E1 751001    1921            mov     _backward,#0x01
07E4 E4        1922            clr     a
07E5 F511      1923            mov     (_backward + 1),a
07E7           1924   ;        Tone_gen.c:383: while(joy_y <= -80){
07E7           1925   L005079?:
07E7 C3        1926            clr     c
07E8 74B0      1927            mov     a,#0xB0
07EA 9548      1928            subb    a,_main_joy_y_1_70
07EC 747F      1929            mov     a,#(0xFF ^ 0x80)
07EE 8549F0    1930            mov     b,(_main_joy_y_1_70 + 1)
07F1 63F080    1931            xrl     b,#0x80
07F4 95F0      1932            subb    a,b
07F6 5000      1933            jnc     L005245?
07F8 020000    1934            ljmp    L005083?
07FB           1935   L005245?:
07FB           1936   ;        Tone_gen.c:384: nunchuck_getdata(rbuf);
07FB 90B468    1937            mov     dptr,#_main_rbuf_1_70
07FE 75F040    1938            mov     b,#0x40
0801 120000    1939            lcall   _nunchuck_getdata
0804           1940   ;        Tone_gen.c:386: joy_x=(int)rbuf[0]-128-off_x;
0804 AC68      1941            mov     r4,_main_rbuf_1_70
0806 7D00      1942            mov     r5,#0x00
0808 EC        1943            mov     a,r4
0809 2480      1944            add     a,#0x80
080B FC        1945            mov     r4,a
080C ED        1946            mov     a,r5
080D 34FF      1947            addc    a,#0xff
080F FD        1948            mov     r5,a
0810 EC        1949            mov     a,r4
0811 C3        1950            clr     c
0812 9598      1951            subb    a,_main_off_x_1_70
0814 F5F8      1952            mov     _main_joy_x_1_70,a
0816 ED        1953            mov     a,r5
0817 9599      1954            subb    a,(_main_off_x_1_70 + 1)
0819 F5F9      1955            mov     (_main_joy_x_1_70 + 1),a
081B           1956   ;        Tone_gen.c:387: joy_y=(int)rbuf[1]-128-off_y;
081B AC69      1957            mov     r4,(_main_rbuf_1_70 + 0x0001)
081D 7D00      1958            mov     r5,#0x00
081F EC        1959            mov     a,r4
0820 2480      1960            add     a,#0x80
0822 FC        1961            mov     r4,a
0823 ED        1962            mov     a,r5
0824 34FF      1963            addc    a,#0xff
0826 FD        1964            mov     r5,a
0827 EC        1965            mov     a,r4
0828 C3        1966            clr     c
0829 95E8      1967            subb    a,_main_off_y_1_70
082B F548      1968            mov     _main_joy_y_1_70,a
082D ED        1969            mov     a,r5
082E 95E9      1970            subb    a,(_main_off_y_1_70 + 1)
0830 F549      1971            mov     (_main_joy_y_1_70 + 1),a
0832           1972   ;        Tone_gen.c:388: acc_x=rbuf[2]*4; 
0832 E56A      1973            mov     a,(_main_rbuf_1_70 + 0x0002)
0834 75F004    1974            mov     b,#0x04
0837 A4        1975            mul     ab
0838 FA        1976            mov     r2,a
0839 ABF0      1977            mov     r3,b
083B           1978   ;        Tone_gen.c:389: acc_y=rbuf[3]*4;
083B E56B      1979            mov     a,(_main_rbuf_1_70 + 0x0003)
083D 75F004    1980            mov     b,#0x04
0840 A4        1981            mul     ab
0841 F538      1982            mov     _main_acc_y_1_70,a
0843 85F039    1983            mov     (_main_acc_y_1_70 + 1),b
0846           1984   ;        Tone_gen.c:390: acc_z=rbuf[4]*4;
0846 E56C      1985            mov     a,(_main_rbuf_1_70 + 0x0004)
0848 75F004    1986            mov     b,#0x04
084B A4        1987            mul     ab
084C F588      1988            mov     _main_acc_z_1_70,a
084E 85F089    1989            mov     (_main_acc_z_1_70 + 1),b
0851           1990   ;        Tone_gen.c:392: but1=(rbuf[5] & 0x01)?1:0;
0851 E56D      1991            mov     a,(_main_rbuf_1_70 + 0x0005)
0853 13        1992            rrc     a
0854 9208      1993            mov     _main_but1_1_70,c
0856           1994   ;        Tone_gen.c:393: but2=(rbuf[5] & 0x02)?1:0;
0856 E56D      1995            mov     a,(_main_rbuf_1_70 + 0x0005)
0858 A2E1      1996            mov     c,acc.1
085A 9248      1997            mov     _main_but2_1_70,c
085C           1998   ;        Tone_gen.c:394: if (rbuf[5] & 0x04) acc_x+=2;
085C E56D      1999            mov     a,(_main_rbuf_1_70 + 0x0005)
085E 30E228    2000            jnb     acc.2,L005068?
0861 7402      2001            mov     a,#0x02
0863 2A        2002            add     a,r2
0864 FA        2003            mov     r2,a
0865 E4        2004            clr     a
0866 3B        2005            addc    a,r3
0867 FB        2006            mov     r3,a
0868           2007   L005068?:
0868           2008   ;        Tone_gen.c:395: if (rbuf[5] & 0x08) acc_x+=1;
0868 E56D      2009            mov     a,(_main_rbuf_1_70 + 0x0005)
086A 30E368    2010            jnb     acc.3,L005070?
086D 0A        2011            inc     r2
086E BA00A8    2012            cjne    r2,#0x00,L005248?
0871 0B        2013            inc     r3
0872           2014   L005248?:
0872           2015   L005070?:
0872           2016   ;        Tone_gen.c:396: if (rbuf[5] & 0x10) acc_y+=2;
0872 E56D      2017            mov     a,(_main_rbuf_1_70 + 0x0005)
0874 30E4E8    2018            jnb     acc.4,L005072?
0877 7402      2019            mov     a,#0x02
0879 2538      2020            add     a,_main_acc_y_1_70
087B F538      2021            mov     _main_acc_y_1_70,a
087D E4        2022            clr     a
087E 3539      2023            addc    a,(_main_acc_y_1_70 + 1)
0880 F539      2024            mov     (_main_acc_y_1_70 + 1),a
0882           2025   L005072?:
0882           2026   ;        Tone_gen.c:397: if (rbuf[5] & 0x20) acc_y+=1;
0882 E56D      2027            mov     a,(_main_rbuf_1_70 + 0x0005)
0884 30E528    2028            jnb     acc.5,L005074?
0887 0538      2029            inc     _main_acc_y_1_70
0889 E4        2030            clr     a
088A B53868    2031            cjne    a,_main_acc_y_1_70,L005251?
088D 0539      2032            inc     (_main_acc_y_1_70 + 1)
088F           2033   L005251?:
088F           2034   L005074?:
088F           2035   ;        Tone_gen.c:398: if (rbuf[5] & 0x40) acc_z+=2;
088F E56D      2036            mov     a,(_main_rbuf_1_70 + 0x0005)
0891 30E6A8    2037            jnb     acc.6,L005076?
0894 7402      2038            mov     a,#0x02
0896 2588      2039            add     a,_main_acc_z_1_70
0898 F588      2040            mov     _main_acc_z_1_70,a
089A E4        2041            clr     a
089B 3589      2042            addc    a,(_main_acc_z_1_70 + 1)
089D F589      2043            mov     (_main_acc_z_1_70 + 1),a
089F           2044   L005076?:
089F           2045   ;        Tone_gen.c:399: if (rbuf[5] & 0x80) acc_z+=1;
089F E56D      2046            mov     a,(_main_rbuf_1_70 + 0x0005)
08A1 30E7E8    2047            jnb     acc.7,L005078?
08A4 0588      2048            inc     _main_acc_z_1_70
08A6 E4        2049            clr     a
08A7 B58828    2050            cjne    a,_main_acc_z_1_70,L005254?
08AA 0589      2051            inc     (_main_acc_z_1_70 + 1)
08AC           2052   L005254?:
08AC           2053   L005078?:
08AC           2054   ;        Tone_gen.c:402: but1?'1':'0', but2?'1':'0', joy_x, joy_y, acc_x, acc_y, acc_z);
08AC 304868    2055            jnb     _main_but2_1_70,L005118?
08AF 7C31      2056            mov     r4,#0x31
08B1 8000      2057            sjmp    L005119?
08B3           2058   L005118?:
08B3 7C30      2059            mov     r4,#0x30
08B5           2060   L005119?:
08B5 EC        2061            mov     a,r4
08B6 33        2062            rlc     a
08B7 95E0      2063            subb    a,acc
08B9 FD        2064            mov     r5,a
08BA 3008E8    2065            jnb     _main_but1_1_70,L005120?
08BD 7E31      2066            mov     r6,#0x31
08BF 8000      2067            sjmp    L005121?
08C1           2068   L005120?:
08C1 7E30      2069            mov     r6,#0x30
08C3           2070   L005121?:
08C3 EE        2071            mov     a,r6
08C4 33        2072            rlc     a
08C5 95E0      2073            subb    a,acc
08C7 FF        2074            mov     r7,a
08C8           2075   ;        Tone_gen.c:401: printf("Buttons(Z:%c, C:%c) Joystick(%4d, %4d) Accelerometer(%3d, %3d, %3d)\x1b[0J\r",
08C8 C002      2076            push    ar2
08CA C003      2077            push    ar3
08CC C088      2078            push    _main_acc_z_1_70
08CE C089      2079            push    (_main_acc_z_1_70 + 1)
08D0 C038      2080            push    _main_acc_y_1_70
08D2 C039      2081            push    (_main_acc_y_1_70 + 1)
08D4 C002      2082            push    ar2
08D6 C003      2083            push    ar3
08D8 C048      2084            push    _main_joy_y_1_70
08DA C049      2085            push    (_main_joy_y_1_70 + 1)
08DC C0F8      2086            push    _main_joy_x_1_70
08DE C0F9      2087            push    (_main_joy_x_1_70 + 1)
08E0 C004      2088            push    ar4
08E2 C005      2089            push    ar5
08E4 C006      2090            push    ar6
08E6 C007      2091            push    ar7
08E8 74A8      2092            mov     a,#__str_11
08EA C0E0      2093            push    acc
08EC 74CB      2094            mov     a,#(__str_11 >> 8)
08EE C0E0      2095            push    acc
08F0 7480      2096            mov     a,#0x80
08F2 C0E0      2097            push    acc
08F4 120000    2098            lcall   _printf
08F7 E581      2099            mov     a,sp
08F9 24EF      2100            add     a,#0xef
08FB F581      2101            mov     sp,a
08FD           2102   ;        Tone_gen.c:404: Timer4ms(100);
08FD 758264    2103            mov     dpl,#0x64
0900 120000    2104            lcall   _Timer4ms
0903 D003      2105            pop     ar3
0905 D002      2106            pop     ar2
0907           2107   ;        Tone_gen.c:405: counter = 2;
0907 75D002    2108            mov     _counter,#0x02
090A E4        2109            clr     a
090B F5D1      2110            mov     (_counter + 1),a
090D 020000    2111            ljmp    L005079?
0910           2112   L005083?:
0910           2113   ;        Tone_gen.c:409: backward=0;
0910           2114   ;        Tone_gen.c:410: counter = 0;
0910 E4        2115            clr     a
0911 F510      2116            mov     _backward,a
0913 F511      2117            mov     (_backward + 1),a
0915 F5D0      2118            mov     _counter,a
0917 F5D1      2119            mov     (_counter + 1),a
0919           2120   ;        Tone_gen.c:413: but1?'1':'0', but2?'1':'0', joy_x, joy_y, acc_x, acc_y, acc_z);
0919 304868    2121            jnb     _main_but2_1_70,L005122?
091C 7C31      2122            mov     r4,#0x31
091E 8000      2123            sjmp    L005123?
0920           2124   L005122?:
0920 7C30      2125            mov     r4,#0x30
0922           2126   L005123?:
0922 EC        2127            mov     a,r4
0923 33        2128            rlc     a
0924 95E0      2129            subb    a,acc
0926 FD        2130            mov     r5,a
0927 3008E8    2131            jnb     _main_but1_1_70,L005124?
092A 7E31      2132            mov     r6,#0x31
092C 8000      2133            sjmp    L005125?
092E           2134   L005124?:
092E 7E30      2135            mov     r6,#0x30
0930           2136   L005125?:
0930 EE        2137            mov     a,r6
0931 33        2138            rlc     a
0932 95E0      2139            subb    a,acc
0934 FF        2140            mov     r7,a
0935           2141   ;        Tone_gen.c:412: printf("Buttons(Z:%c, C:%c) Joystick(%4d, %4d) Accelerometer(%3d, %3d, %3d)\x1b[0J\r",
0935 C088      2142            push    _main_acc_z_1_70
0937 C089      2143            push    (_main_acc_z_1_70 + 1)
0939 C038      2144            push    _main_acc_y_1_70
093B C039      2145            push    (_main_acc_y_1_70 + 1)
093D C002      2146            push    ar2
093F C003      2147            push    ar3
0941 C048      2148            push    _main_joy_y_1_70
0943 C049      2149            push    (_main_joy_y_1_70 + 1)
0945 C0F8      2150            push    _main_joy_x_1_70
0947 C0F9      2151            push    (_main_joy_x_1_70 + 1)
0949 C004      2152            push    ar4
094B C005      2153            push    ar5
094D C006      2154            push    ar6
094F C007      2155            push    ar7
0951 74A8      2156            mov     a,#__str_11
0953 C0E0      2157            push    acc
0955 74CB      2158            mov     a,#(__str_11 >> 8)
0957 C0E0      2159            push    acc
0959 7480      2160            mov     a,#0x80
095B C0E0      2161            push    acc
095D 120000    2162            lcall   _printf
0960 E581      2163            mov     a,sp
0962 24EF      2164            add     a,#0xef
0964 F581      2165            mov     sp,a
0966           2166   ;        Tone_gen.c:415: Timer4ms(100);
0966 758264    2167            mov     dpl,#0x64
0969 120000    2168            lcall   _Timer4ms
096C           2169   ;        Tone_gen.c:417: if(but1==0){
096C 300868    2170            jnb     _main_but1_1_70,L005259?
096F 020000    2171            ljmp    L005102?
0972           2172   L005259?:
0972           2173   ;        Tone_gen.c:418: LCDprint("mode:track", 1, 1);
0972 750001    2174            mov     _LCDprint_PARM_2,#0x01
0975 D200      2175            setb    _LCDprint_PARM_3
0977 90DAA8    2176            mov     dptr,#__str_15
097A 75F080    2177            mov     b,#0x80
097D 120000    2178            lcall   _LCDprint
0980           2179   ;        Tone_gen.c:419: Timer4ms(100);
0980 758264    2180            mov     dpl,#0x64
0983 120000    2181            lcall   _Timer4ms
0986           2182   ;        Tone_gen.c:420: track = 1;
0986 759001    2183            mov     _track,#0x01
0989 E4        2184            clr     a
098A F591      2185            mov     (_track + 1),a
098C           2186   ;        Tone_gen.c:422: while(but2!=0){
098C           2187   L005096?:
098C 204828    2188            jb      _main_but2_1_70,L005260?
098F 020000    2189            ljmp    L005098?
0992           2190   L005260?:
0992           2191   ;        Tone_gen.c:424: nunchuck_getdata(rbuf);
0992 90B468    2192            mov     dptr,#_main_rbuf_1_70
0995 75F040    2193            mov     b,#0x40
0998 120000    2194            lcall   _nunchuck_getdata
099B           2195   ;        Tone_gen.c:426: joy_x=(int)rbuf[0]-128-off_x;
099B AC68      2196            mov     r4,_main_rbuf_1_70
099D 7D00      2197            mov     r5,#0x00
099F EC        2198            mov     a,r4
09A0 2480      2199            add     a,#0x80
09A2 FC        2200            mov     r4,a
09A3 ED        2201            mov     a,r5
09A4 34FF      2202            addc    a,#0xff
09A6 FD        2203            mov     r5,a
09A7 EC        2204            mov     a,r4
09A8 C3        2205            clr     c
09A9 9598      2206            subb    a,_main_off_x_1_70
09AB F5F8      2207            mov     _main_joy_x_1_70,a
09AD ED        2208            mov     a,r5
09AE 9599      2209            subb    a,(_main_off_x_1_70 + 1)
09B0 F5F9      2210            mov     (_main_joy_x_1_70 + 1),a
09B2           2211   ;        Tone_gen.c:427: joy_y=(int)rbuf[1]-128-off_y;
09B2 AC69      2212            mov     r4,(_main_rbuf_1_70 + 0x0001)
09B4 7D00      2213            mov     r5,#0x00
09B6 EC        2214            mov     a,r4
09B7 2480      2215            add     a,#0x80
09B9 FC        2216            mov     r4,a
09BA ED        2217            mov     a,r5
09BB 34FF      2218            addc    a,#0xff
09BD FD        2219            mov     r5,a
09BE EC        2220            mov     a,r4
09BF C3        2221            clr     c
09C0 95E8      2222            subb    a,_main_off_y_1_70
09C2 F548      2223            mov     _main_joy_y_1_70,a
09C4 ED        2224            mov     a,r5
09C5 95E9      2225            subb    a,(_main_off_y_1_70 + 1)
09C7 F549      2226            mov     (_main_joy_y_1_70 + 1),a
09C9           2227   ;        Tone_gen.c:428: acc_x=rbuf[2]*4; 
09C9 E56A      2228            mov     a,(_main_rbuf_1_70 + 0x0002)
09CB 75F004    2229            mov     b,#0x04
09CE A4        2230            mul     ab
09CF FA        2231            mov     r2,a
09D0 ABF0      2232            mov     r3,b
09D2           2233   ;        Tone_gen.c:429: acc_y=rbuf[3]*4;
09D2 E56B      2234            mov     a,(_main_rbuf_1_70 + 0x0003)
09D4 75F004    2235            mov     b,#0x04
09D7 A4        2236            mul     ab
09D8 F538      2237            mov     _main_acc_y_1_70,a
09DA 85F039    2238            mov     (_main_acc_y_1_70 + 1),b
09DD           2239   ;        Tone_gen.c:430: acc_z=rbuf[4]*4;
09DD E56C      2240            mov     a,(_main_rbuf_1_70 + 0x0004)
09DF 75F004    2241            mov     b,#0x04
09E2 A4        2242            mul     ab
09E3 F588      2243            mov     _main_acc_z_1_70,a
09E5 85F089    2244            mov     (_main_acc_z_1_70 + 1),b
09E8           2245   ;        Tone_gen.c:432: but1=(rbuf[5] & 0x01)?1:0;
09E8 E56D      2246            mov     a,(_main_rbuf_1_70 + 0x0005)
09EA 13        2247            rrc     a
09EB 9208      2248            mov     _main_but1_1_70,c
09ED           2249   ;        Tone_gen.c:433: but2=(rbuf[5] & 0x02)?1:0;
09ED E56D      2250            mov     a,(_main_rbuf_1_70 + 0x0005)
09EF A2E1      2251            mov     c,acc.1
09F1 9248      2252            mov     _main_but2_1_70,c
09F3           2253   ;        Tone_gen.c:434: if (rbuf[5] & 0x04) acc_x+=2;
09F3 E56D      2254            mov     a,(_main_rbuf_1_70 + 0x0005)
09F5 30E2A8    2255            jnb     acc.2,L005085?
09F8 7402      2256            mov     a,#0x02
09FA 2A        2257            add     a,r2
09FB FA        2258            mov     r2,a
09FC E4        2259            clr     a
09FD 3B        2260            addc    a,r3
09FE FB        2261            mov     r3,a
09FF           2262   L005085?:
09FF           2263   ;        Tone_gen.c:435: if (rbuf[5] & 0x08) acc_x+=1;
09FF E56D      2264            mov     a,(_main_rbuf_1_70 + 0x0005)
0A01 30E3E8    2265            jnb     acc.3,L005087?
0A04 0A        2266            inc     r2
0A05 BA0028    2267            cjne    r2,#0x00,L005263?
0A08 0B        2268            inc     r3
0A09           2269   L005263?:
0A09           2270   L005087?:
0A09           2271   ;        Tone_gen.c:436: if (rbuf[5] & 0x10) acc_y+=2;
0A09 E56D      2272            mov     a,(_main_rbuf_1_70 + 0x0005)
0A0B 30E468    2273            jnb     acc.4,L005089?
0A0E 7402      2274            mov     a,#0x02
0A10 2538      2275            add     a,_main_acc_y_1_70
0A12 F538      2276            mov     _main_acc_y_1_70,a
0A14 E4        2277            clr     a
0A15 3539      2278            addc    a,(_main_acc_y_1_70 + 1)
0A17 F539      2279            mov     (_main_acc_y_1_70 + 1),a
0A19           2280   L005089?:
0A19           2281   ;        Tone_gen.c:437: if (rbuf[5] & 0x20) acc_y+=1;
0A19 E56D      2282            mov     a,(_main_rbuf_1_70 + 0x0005)
0A1B 30E5A8    2283            jnb     acc.5,L005091?
0A1E 0538      2284            inc     _main_acc_y_1_70
0A20 E4        2285            clr     a
0A21 B538E8    2286            cjne    a,_main_acc_y_1_70,L005266?
0A24 0539      2287            inc     (_main_acc_y_1_70 + 1)
0A26           2288   L005266?:
0A26           2289   L005091?:
0A26           2290   ;        Tone_gen.c:438: if (rbuf[5] & 0x40) acc_z+=2;
0A26 E56D      2291            mov     a,(_main_rbuf_1_70 + 0x0005)
0A28 30E628    2292            jnb     acc.6,L005093?
0A2B 7402      2293            mov     a,#0x02
0A2D 2588      2294            add     a,_main_acc_z_1_70
0A2F F588      2295            mov     _main_acc_z_1_70,a
0A31 E4        2296            clr     a
0A32 3589      2297            addc    a,(_main_acc_z_1_70 + 1)
0A34 F589      2298            mov     (_main_acc_z_1_70 + 1),a
0A36           2299   L005093?:
0A36           2300   ;        Tone_gen.c:439: if (rbuf[5] & 0x80) acc_z+=1;
0A36 E56D      2301            mov     a,(_main_rbuf_1_70 + 0x0005)
0A38 30E768    2302            jnb     acc.7,L005095?
0A3B 0588      2303            inc     _main_acc_z_1_70
0A3D E4        2304            clr     a
0A3E B588A8    2305            cjne    a,_main_acc_z_1_70,L005269?
0A41 0589      2306            inc     (_main_acc_z_1_70 + 1)
0A43           2307   L005269?:
0A43           2308   L005095?:
0A43           2309   ;        Tone_gen.c:442: but1?'1':'0', but2?'1':'0', joy_x, joy_y, acc_x, acc_y, acc_z);
0A43 3048E8    2310            jnb     _main_but2_1_70,L005126?
0A46 7C31      2311            mov     r4,#0x31
0A48 8000      2312            sjmp    L005127?
0A4A           2313   L005126?:
0A4A 7C30      2314            mov     r4,#0x30
0A4C           2315   L005127?:
0A4C EC        2316            mov     a,r4
0A4D 33        2317            rlc     a
0A4E 95E0      2318            subb    a,acc
0A50 FD        2319            mov     r5,a
0A51 300868    2320            jnb     _main_but1_1_70,L005128?
0A54 7E31      2321            mov     r6,#0x31
0A56 8000      2322            sjmp    L005129?
0A58           2323   L005128?:
0A58 7E30      2324            mov     r6,#0x30
0A5A           2325   L005129?:
0A5A EE        2326            mov     a,r6
0A5B 33        2327            rlc     a
0A5C 95E0      2328            subb    a,acc
0A5E FF        2329            mov     r7,a
0A5F           2330   ;        Tone_gen.c:441: printf("Buttons(Z:%c, C:%c) Joystick(%4d, %4d) Accelerometer(%3d, %3d, %3d)\x1b[0J\r",
0A5F C088      2331            push    _main_acc_z_1_70
0A61 C089      2332            push    (_main_acc_z_1_70 + 1)
0A63 C038      2333            push    _main_acc_y_1_70
0A65 C039      2334            push    (_main_acc_y_1_70 + 1)
0A67 C002      2335            push    ar2
0A69 C003      2336            push    ar3
0A6B C048      2337            push    _main_joy_y_1_70
0A6D C049      2338            push    (_main_joy_y_1_70 + 1)
0A6F C0F8      2339            push    _main_joy_x_1_70
0A71 C0F9      2340            push    (_main_joy_x_1_70 + 1)
0A73 C004      2341            push    ar4
0A75 C005      2342            push    ar5
0A77 C006      2343            push    ar6
0A79 C007      2344            push    ar7
0A7B 74A8      2345            mov     a,#__str_11
0A7D C0E0      2346            push    acc
0A7F 74CB      2347            mov     a,#(__str_11 >> 8)
0A81 C0E0      2348            push    acc
0A83 7480      2349            mov     a,#0x80
0A85 C0E0      2350            push    acc
0A87 120000    2351            lcall   _printf
0A8A E581      2352            mov     a,sp
0A8C 24EF      2353            add     a,#0xef
0A8E F581      2354            mov     sp,a
0A90           2355   ;        Tone_gen.c:444: Timer4ms(100);
0A90 758264    2356            mov     dpl,#0x64
0A93 120000    2357            lcall   _Timer4ms
0A96 020000    2358            ljmp    L005096?
0A99           2359   L005098?:
0A99           2360   ;        Tone_gen.c:446: track = 0;
0A99           2361   ;        Tone_gen.c:447: counter = 0;
0A99 E4        2362            clr     a
0A9A F590      2363            mov     _track,a
0A9C F591      2364            mov     (_track + 1),a
0A9E F5D0      2365            mov     _counter,a
0AA0 F5D1      2366            mov     (_counter + 1),a
0AA2 020000    2367            ljmp    L005102?
0AA5           2368            rseg R_CSEG
0AA5           2369   
0000           2370            rseg R_XINIT
0000           2371   
0000           2372            rseg R_CONST
0000           2373   __str_0:
0000 74686973  2374            db 'thisworking'
     776F726B
     696E67
000B 00        2375            db 0x00
000C           2376   __str_1:
000C 1B        2377            db 0x1B
000D 5B324A    2378            db '[2J'
0010 00        2379            db 0x00
0011           2380   __str_2:
0011 4E657720  2381            db 'New frequency='
     66726571
     75656E63
     793D
001F 00        2382            db 0x00
0020           2383   __str_3:
0020 256C75    2384            db '%lu'
0023 00        2385            db 0x00
0024           2386   __str_4:
0024 536F7272  2387            db 'Sorry %lu Hz is out of range.'
     7920256C
     7520487A
     20697320
     6F757420
     6F662072
     616E6765
     2E
0041 0A        2388            db 0x0A
0042 00        2389            db 0x00
0043           2390   __str_5:
0043 0A        2391            db 0x0A
0044 41637475  2392            db 'Actual frequency: %lu'
     616C2066
     72657175
     656E6379
     3A20256C
     75
0059 0A        2393            db 0x0A
005A 00        2394            db 0x00
005B           2395   __str_6:
005B 0A        2396            db 0x0A
005C 0A        2397            db 0x0A
005D 45464D38  2398            db 'EFM8LB1 WII Nunchuck I2C Reader'
     4C423120
     57494920
     4E756E63
     6875636B
     20493243
     20526561
     646572
007C 0A        2399            db 0x0A
007D 00        2400            db 0x00
007E           2401   __str_7:
007E 56617269  2402            db 'Variable frequency generator for the EFM8LB1.'
     61626C65
     20667265
     7175656E
     63792067
     656E6572
     61746F72
     20666F72
     20746865
     2045464D
     384C4231
     2E
00AB 0D        2403            db 0x0D
00AC 0A        2404            db 0x0A
00AD 43686563  2405            db 'Check pins P2'
     6B207069
     6E732050
     32
00BA 2E302061  2406            db '.0 and P1.7 with the oscilloscope.'
     6E642050
     312E3720
     77697468
     20746865
     206F7363
     696C6C6F
     73636F70
     652E
00DC 0D        2407            db 0x0D
00DD 0A        2408            db 0x0A
00DE 00        2409            db 0x00
00DF           2410   __str_8:
00DF 4F666673  2411            db 'Offset_X:%4d Offset_Y:%4d'
     65745F58
     3A253464
     204F6666
     7365745F
     593A2534
     64
00F8 0A        2412            db 0x0A
00F9 0A        2413            db 0x0A
00FA 00        2414            db 0x00
00FB           2415   __str_9:
00FB 6D6F6465  2416            db 'mode:remote'
     3A72656D
     6F7465
0106 00        2417            db 0x00
0107           2418   __str_10:
0107 72696768  2419            db 'right'
     74
010C 00        2420            db 0x00
010D           2421   __str_11:
010D 42757474  2422            db 'Buttons(Z:%c, C:%c) Joystick(%4d, %4d) Accelerometer(%3d, %3'
     6F6E7328
     5A3A2563
     2C20433A
     25632920
     4A6F7973
     7469636B
     28253464
     2C202534
     64292041
     6363656C
     65726F6D
     65746572
     28253364
     2C202533
0149 642C2025  2423            db 'd, %3d)'
     336429
0150 1B        2424            db 0x1B
0151 5B304A    2425            db '[0J'
0154 0D        2426            db 0x0D
0155 00        2427            db 0x00
0156           2428   __str_12:
0156 6C656674  2429            db 'left'
015A 00        2430            db 0x00
015B           2431   __str_13:
015B 666F7277  2432            db 'forward'
     617264
0162 00        2433            db 0x00
0163           2434   __str_14:
0163 6261636B  2435            db 'backward'
     77617264
016B 00        2436            db 0x00
016C           2437   __str_15:
016C 6D6F6465  2438            db 'mode:track'
     3A747261
     636B
0176 00        2439            db 0x00
0177           2440   
0086           2441            CSEG
0086           2442   
0086           2443   end
