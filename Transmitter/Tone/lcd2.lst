0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Sat Apr 01 03:51:17 2023
0000              5   ;--------------------------------------------------------
                  5   $name lcd2
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _LCDprint_PARM_3
0000             27            public _nunchuck_init_PARM_1
0000             28            public _LCDprint_PARM_2
0000             29            public _Timer4ms
0000             30            public _I2C_write
0000             31            public _I2C_read
0000             32            public _I2C_start
0000             33            public _I2C_stop
0000             34            public _nunchuck_init
0000             35            public _nunchuck_getdata
0000             36            public _LCD_pulse
0000             37            public _LCD_byte
0000             38            public _WriteData
0000             39            public _WriteCommand
0000             40            public _LCD_4BIT
0000             41            public _LCDprint
0000             42   ;--------------------------------------------------------
0000             43   ; Special Function Registers
0000             44   ;--------------------------------------------------------
0000             45   _ACC            DATA 0xe0
0000             46   _ADC0ASAH       DATA 0xb6
0000             47   _ADC0ASAL       DATA 0xb5
0000             48   _ADC0ASCF       DATA 0xa1
0000             49   _ADC0ASCT       DATA 0xc7
0000             50   _ADC0CF0        DATA 0xbc
0000             51   _ADC0CF1        DATA 0xb9
0000             52   _ADC0CF2        DATA 0xdf
0000             53   _ADC0CN0        DATA 0xe8
0000             54   _ADC0CN1        DATA 0xb2
0000             55   _ADC0CN2        DATA 0xb3
0000             56   _ADC0GTH        DATA 0xc4
0000             57   _ADC0GTL        DATA 0xc3
0000             58   _ADC0H          DATA 0xbe
0000             59   _ADC0L          DATA 0xbd
0000             60   _ADC0LTH        DATA 0xc6
0000             61   _ADC0LTL        DATA 0xc5
0000             62   _ADC0MX         DATA 0xbb
0000             63   _B              DATA 0xf0
0000             64   _CKCON0         DATA 0x8e
0000             65   _CKCON1         DATA 0xa6
0000             66   _CLEN0          DATA 0xc6
0000             67   _CLIE0          DATA 0xc7
0000             68   _CLIF0          DATA 0xe8
0000             69   _CLKSEL         DATA 0xa9
0000             70   _CLOUT0         DATA 0xd1
0000             71   _CLU0CF         DATA 0xb1
0000             72   _CLU0FN         DATA 0xaf
0000             73   _CLU0MX         DATA 0x84
0000             74   _CLU1CF         DATA 0xb3
0000             75   _CLU1FN         DATA 0xb2
0000             76   _CLU1MX         DATA 0x85
0000             77   _CLU2CF         DATA 0xb6
0000             78   _CLU2FN         DATA 0xb5
0000             79   _CLU2MX         DATA 0x91
0000             80   _CLU3CF         DATA 0xbf
0000             81   _CLU3FN         DATA 0xbe
0000             82   _CLU3MX         DATA 0xae
0000             83   _CMP0CN0        DATA 0x9b
0000             84   _CMP0CN1        DATA 0x99
0000             85   _CMP0MD         DATA 0x9d
0000             86   _CMP0MX         DATA 0x9f
0000             87   _CMP1CN0        DATA 0xbf
0000             88   _CMP1CN1        DATA 0xac
0000             89   _CMP1MD         DATA 0xab
0000             90   _CMP1MX         DATA 0xaa
0000             91   _CRC0CN0        DATA 0xce
0000             92   _CRC0CN1        DATA 0x86
0000             93   _CRC0CNT        DATA 0xd3
0000             94   _CRC0DAT        DATA 0xcb
0000             95   _CRC0FLIP       DATA 0xcf
0000             96   _CRC0IN         DATA 0xca
0000             97   _CRC0ST         DATA 0xd2
0000             98   _DAC0CF0        DATA 0x91
0000             99   _DAC0CF1        DATA 0x92
0000            100   _DAC0H          DATA 0x85
0000            101   _DAC0L          DATA 0x84
0000            102   _DAC1CF0        DATA 0x93
0000            103   _DAC1CF1        DATA 0x94
0000            104   _DAC1H          DATA 0x8a
0000            105   _DAC1L          DATA 0x89
0000            106   _DAC2CF0        DATA 0x95
0000            107   _DAC2CF1        DATA 0x96
0000            108   _DAC2H          DATA 0x8c
0000            109   _DAC2L          DATA 0x8b
0000            110   _DAC3CF0        DATA 0x9a
0000            111   _DAC3CF1        DATA 0x9c
0000            112   _DAC3H          DATA 0x8e
0000            113   _DAC3L          DATA 0x8d
0000            114   _DACGCF0        DATA 0x88
0000            115   _DACGCF1        DATA 0x98
0000            116   _DACGCF2        DATA 0xa2
0000            117   _DERIVID        DATA 0xad
0000            118   _DEVICEID       DATA 0xb5
0000            119   _DPH            DATA 0x83
0000            120   _DPL            DATA 0x82
0000            121   _EIE1           DATA 0xe6
0000            122   _EIE2           DATA 0xf3
0000            123   _EIP1           DATA 0xbb
0000            124   _EIP1H          DATA 0xee
0000            125   _EIP2           DATA 0xed
0000            126   _EIP2H          DATA 0xf6
0000            127   _EMI0CN         DATA 0xe7
0000            128   _FLKEY          DATA 0xb7
0000            129   _HFO0CAL        DATA 0xc7
0000            130   _HFO1CAL        DATA 0xd6
0000            131   _HFOCN          DATA 0xef
0000            132   _I2C0ADM        DATA 0xff
0000            133   _I2C0CN0        DATA 0xba
0000            134   _I2C0DIN        DATA 0xbc
0000            135   _I2C0DOUT       DATA 0xbb
0000            136   _I2C0FCN0       DATA 0xad
0000            137   _I2C0FCN1       DATA 0xab
0000            138   _I2C0FCT        DATA 0xf5
0000            139   _I2C0SLAD       DATA 0xbd
0000            140   _I2C0STAT       DATA 0xb9
0000            141   _IE             DATA 0xa8
0000            142   _IP             DATA 0xb8
0000            143   _IPH            DATA 0xf2
0000            144   _IT01CF         DATA 0xe4
0000            145   _LFO0CN         DATA 0xb1
0000            146   _P0             DATA 0x80
0000            147   _P0MASK         DATA 0xfe
0000            148   _P0MAT          DATA 0xfd
0000            149   _P0MDIN         DATA 0xf1
0000            150   _P0MDOUT        DATA 0xa4
0000            151   _P0SKIP         DATA 0xd4
0000            152   _P1             DATA 0x90
0000            153   _P1MASK         DATA 0xee
0000            154   _P1MAT          DATA 0xed
0000            155   _P1MDIN         DATA 0xf2
0000            156   _P1MDOUT        DATA 0xa5
0000            157   _P1SKIP         DATA 0xd5
0000            158   _P2             DATA 0xa0
0000            159   _P2MASK         DATA 0xfc
0000            160   _P2MAT          DATA 0xfb
0000            161   _P2MDIN         DATA 0xf3
0000            162   _P2MDOUT        DATA 0xa6
0000            163   _P2SKIP         DATA 0xcc
0000            164   _P3             DATA 0xb0
0000            165   _P3MDIN         DATA 0xf4
0000            166   _P3MDOUT        DATA 0x9c
0000            167   _PCA0CENT       DATA 0x9e
0000            168   _PCA0CLR        DATA 0x9c
0000            169   _PCA0CN0        DATA 0xd8
0000            170   _PCA0CPH0       DATA 0xfc
0000            171   _PCA0CPH1       DATA 0xea
0000            172   _PCA0CPH2       DATA 0xec
0000            173   _PCA0CPH3       DATA 0xf5
0000            174   _PCA0CPH4       DATA 0x85
0000            175   _PCA0CPH5       DATA 0xde
0000            176   _PCA0CPL0       DATA 0xfb
0000            177   _PCA0CPL1       DATA 0xe9
0000            178   _PCA0CPL2       DATA 0xeb
0000            179   _PCA0CPL3       DATA 0xf4
0000            180   _PCA0CPL4       DATA 0x84
0000            181   _PCA0CPL5       DATA 0xdd
0000            182   _PCA0CPM0       DATA 0xda
0000            183   _PCA0CPM1       DATA 0xdb
0000            184   _PCA0CPM2       DATA 0xdc
0000            185   _PCA0CPM3       DATA 0xae
0000            186   _PCA0CPM4       DATA 0xaf
0000            187   _PCA0CPM5       DATA 0xcc
0000            188   _PCA0H          DATA 0xfa
0000            189   _PCA0L          DATA 0xf9
0000            190   _PCA0MD         DATA 0xd9
0000            191   _PCA0POL        DATA 0x96
0000            192   _PCA0PWM        DATA 0xf7
0000            193   _PCON0          DATA 0x87
0000            194   _PCON1          DATA 0xcd
0000            195   _PFE0CN         DATA 0xc1
0000            196   _PRTDRV         DATA 0xf6
0000            197   _PSCTL          DATA 0x8f
0000            198   _PSTAT0         DATA 0xaa
0000            199   _PSW            DATA 0xd0
0000            200   _REF0CN         DATA 0xd1
0000            201   _REG0CN         DATA 0xc9
0000            202   _REVID          DATA 0xb6
0000            203   _RSTSRC         DATA 0xef
0000            204   _SBCON1         DATA 0x94
0000            205   _SBRLH1         DATA 0x96
0000            206   _SBRLL1         DATA 0x95
0000            207   _SBUF           DATA 0x99
0000            208   _SBUF0          DATA 0x99
0000            209   _SBUF1          DATA 0x92
0000            210   _SCON           DATA 0x98
0000            211   _SCON0          DATA 0x98
0000            212   _SCON1          DATA 0xc8
0000            213   _SFRPAGE        DATA 0xa7
0000            214   _SFRPGCN        DATA 0xbc
0000            215   _SFRSTACK       DATA 0xd7
0000            216   _SMB0ADM        DATA 0xd6
0000            217   _SMB0ADR        DATA 0xd7
0000            218   _SMB0CF         DATA 0xc1
0000            219   _SMB0CN0        DATA 0xc0
0000            220   _SMB0DAT        DATA 0xc2
0000            221   _SMB0FCN0       DATA 0xc3
0000            222   _SMB0FCN1       DATA 0xc4
0000            223   _SMB0FCT        DATA 0xef
0000            224   _SMB0RXLN       DATA 0xc5
0000            225   _SMB0TC         DATA 0xac
0000            226   _SMOD1          DATA 0x93
0000            227   _SP             DATA 0x81
0000            228   _SPI0CFG        DATA 0xa1
0000            229   _SPI0CKR        DATA 0xa2
0000            230   _SPI0CN0        DATA 0xf8
0000            231   _SPI0DAT        DATA 0xa3
0000            232   _SPI0FCN0       DATA 0x9a
0000            233   _SPI0FCN1       DATA 0x9b
0000            234   _SPI0FCT        DATA 0xf7
0000            235   _SPI0PCF        DATA 0xdf
0000            236   _TCON           DATA 0x88
0000            237   _TH0            DATA 0x8c
0000            238   _TH1            DATA 0x8d
0000            239   _TL0            DATA 0x8a
0000            240   _TL1            DATA 0x8b
0000            241   _TMOD           DATA 0x89
0000            242   _TMR2CN0        DATA 0xc8
0000            243   _TMR2CN1        DATA 0xfd
0000            244   _TMR2H          DATA 0xcf
0000            245   _TMR2L          DATA 0xce
0000            246   _TMR2RLH        DATA 0xcb
0000            247   _TMR2RLL        DATA 0xca
0000            248   _TMR3CN0        DATA 0x91
0000            249   _TMR3CN1        DATA 0xfe
0000            250   _TMR3H          DATA 0x95
0000            251   _TMR3L          DATA 0x94
0000            252   _TMR3RLH        DATA 0x93
0000            253   _TMR3RLL        DATA 0x92
0000            254   _TMR4CN0        DATA 0x98
0000            255   _TMR4CN1        DATA 0xff
0000            256   _TMR4H          DATA 0xa5
0000            257   _TMR4L          DATA 0xa4
0000            258   _TMR4RLH        DATA 0xa3
0000            259   _TMR4RLL        DATA 0xa2
0000            260   _TMR5CN0        DATA 0xc0
0000            261   _TMR5CN1        DATA 0xf1
0000            262   _TMR5H          DATA 0xd5
0000            263   _TMR5L          DATA 0xd4
0000            264   _TMR5RLH        DATA 0xd3
0000            265   _TMR5RLL        DATA 0xd2
0000            266   _UART0PCF       DATA 0xd9
0000            267   _UART1FCN0      DATA 0x9d
0000            268   _UART1FCN1      DATA 0xd8
0000            269   _UART1FCT       DATA 0xfa
0000            270   _UART1LIN       DATA 0x9e
0000            271   _UART1PCF       DATA 0xda
0000            272   _VDM0CN         DATA 0xff
0000            273   _WDTCN          DATA 0x97
0000            274   _XBR0           DATA 0xe1
0000            275   _XBR1           DATA 0xe2
0000            276   _XBR2           DATA 0xe3
0000            277   _XOSC0CN        DATA 0x86
0000            278   _DPTR           DATA 0x8382
0000            279   _TMR2RL         DATA 0xcbca
0000            280   _TMR3RL         DATA 0x9392
0000            281   _TMR4RL         DATA 0xa3a2
0000            282   _TMR5RL         DATA 0xd3d2
0000            283   _TMR0           DATA 0x8c8a
0000            284   _TMR1           DATA 0x8d8b
0000            285   _TMR2           DATA 0xcfce
0000            286   _TMR3           DATA 0x9594
0000            287   _TMR4           DATA 0xa5a4
0000            288   _TMR5           DATA 0xd5d4
0000            289   _SBRL1          DATA 0x9695
0000            290   _PCA0           DATA 0xfaf9
0000            291   _PCA0CP0        DATA 0xfcfb
0000            292   _PCA0CP1        DATA 0xeae9
0000            293   _PCA0CP2        DATA 0xeceb
0000            294   _PCA0CP3        DATA 0xf5f4
0000            295   _PCA0CP4        DATA 0x8584
0000            296   _PCA0CP5        DATA 0xdedd
0000            297   _ADC0ASA        DATA 0xb6b5
0000            298   _ADC0GT         DATA 0xc4c3
0000            299   _ADC0           DATA 0xbebd
0000            300   _ADC0LT         DATA 0xc6c5
0000            301   _DAC0           DATA 0x8584
0000            302   _DAC1           DATA 0x8a89
0000            303   _DAC2           DATA 0x8c8b
0000            304   _DAC3           DATA 0x8e8d
0000            305   ;--------------------------------------------------------
0000            306   ; special function bits
0000            307   ;--------------------------------------------------------
0000            308   _ACC_0          BIT 0xe0
0000            309   _ACC_1          BIT 0xe1
0000            310   _ACC_2          BIT 0xe2
0000            311   _ACC_3          BIT 0xe3
0000            312   _ACC_4          BIT 0xe4
0000            313   _ACC_5          BIT 0xe5
0000            314   _ACC_6          BIT 0xe6
0000            315   _ACC_7          BIT 0xe7
0000            316   _TEMPE          BIT 0xe8
0000            317   _ADGN0          BIT 0xe9
0000            318   _ADGN1          BIT 0xea
0000            319   _ADWINT         BIT 0xeb
0000            320   _ADBUSY         BIT 0xec
0000            321   _ADINT          BIT 0xed
0000            322   _IPOEN          BIT 0xee
0000            323   _ADEN           BIT 0xef
0000            324   _B_0            BIT 0xf0
0000            325   _B_1            BIT 0xf1
0000            326   _B_2            BIT 0xf2
0000            327   _B_3            BIT 0xf3
0000            328   _B_4            BIT 0xf4
0000            329   _B_5            BIT 0xf5
0000            330   _B_6            BIT 0xf6
0000            331   _B_7            BIT 0xf7
0000            332   _C0FIF          BIT 0xe8
0000            333   _C0RIF          BIT 0xe9
0000            334   _C1FIF          BIT 0xea
0000            335   _C1RIF          BIT 0xeb
0000            336   _C2FIF          BIT 0xec
0000            337   _C2RIF          BIT 0xed
0000            338   _C3FIF          BIT 0xee
0000            339   _C3RIF          BIT 0xef
0000            340   _D1SRC0         BIT 0x88
0000            341   _D1SRC1         BIT 0x89
0000            342   _D1AMEN         BIT 0x8a
0000            343   _D01REFSL       BIT 0x8b
0000            344   _D3SRC0         BIT 0x8c
0000            345   _D3SRC1         BIT 0x8d
0000            346   _D3AMEN         BIT 0x8e
0000            347   _D23REFSL       BIT 0x8f
0000            348   _D0UDIS         BIT 0x98
0000            349   _D1UDIS         BIT 0x99
0000            350   _D2UDIS         BIT 0x9a
0000            351   _D3UDIS         BIT 0x9b
0000            352   _EX0            BIT 0xa8
0000            353   _ET0            BIT 0xa9
0000            354   _EX1            BIT 0xaa
0000            355   _ET1            BIT 0xab
0000            356   _ES0            BIT 0xac
0000            357   _ET2            BIT 0xad
0000            358   _ESPI0          BIT 0xae
0000            359   _EA             BIT 0xaf
0000            360   _PX0            BIT 0xb8
0000            361   _PT0            BIT 0xb9
0000            362   _PX1            BIT 0xba
0000            363   _PT1            BIT 0xbb
0000            364   _PS0            BIT 0xbc
0000            365   _PT2            BIT 0xbd
0000            366   _PSPI0          BIT 0xbe
0000            367   _P0_0           BIT 0x80
0000            368   _P0_1           BIT 0x81
0000            369   _P0_2           BIT 0x82
0000            370   _P0_3           BIT 0x83
0000            371   _P0_4           BIT 0x84
0000            372   _P0_5           BIT 0x85
0000            373   _P0_6           BIT 0x86
0000            374   _P0_7           BIT 0x87
0000            375   _P1_0           BIT 0x90
0000            376   _P1_1           BIT 0x91
0000            377   _P1_2           BIT 0x92
0000            378   _P1_3           BIT 0x93
0000            379   _P1_4           BIT 0x94
0000            380   _P1_5           BIT 0x95
0000            381   _P1_6           BIT 0x96
0000            382   _P1_7           BIT 0x97
0000            383   _P2_0           BIT 0xa0
0000            384   _P2_1           BIT 0xa1
0000            385   _P2_2           BIT 0xa2
0000            386   _P2_3           BIT 0xa3
0000            387   _P2_4           BIT 0xa4
0000            388   _P2_5           BIT 0xa5
0000            389   _P2_6           BIT 0xa6
0000            390   _P3_0           BIT 0xb0
0000            391   _P3_1           BIT 0xb1
0000            392   _P3_2           BIT 0xb2
0000            393   _P3_3           BIT 0xb3
0000            394   _P3_4           BIT 0xb4
0000            395   _P3_7           BIT 0xb7
0000            396   _CCF0           BIT 0xd8
0000            397   _CCF1           BIT 0xd9
0000            398   _CCF2           BIT 0xda
0000            399   _CCF3           BIT 0xdb
0000            400   _CCF4           BIT 0xdc
0000            401   _CCF5           BIT 0xdd
0000            402   _CR             BIT 0xde
0000            403   _CF             BIT 0xdf
0000            404   _PARITY         BIT 0xd0
0000            405   _F1             BIT 0xd1
0000            406   _OV             BIT 0xd2
0000            407   _RS0            BIT 0xd3
0000            408   _RS1            BIT 0xd4
0000            409   _F0             BIT 0xd5
0000            410   _AC             BIT 0xd6
0000            411   _CY             BIT 0xd7
0000            412   _RI             BIT 0x98
0000            413   _TI             BIT 0x99
0000            414   _RB8            BIT 0x9a
0000            415   _TB8            BIT 0x9b
0000            416   _REN            BIT 0x9c
0000            417   _CE             BIT 0x9d
0000            418   _SMODE          BIT 0x9e
0000            419   _RI1            BIT 0xc8
0000            420   _TI1            BIT 0xc9
0000            421   _RBX1           BIT 0xca
0000            422   _TBX1           BIT 0xcb
0000            423   _REN1           BIT 0xcc
0000            424   _PERR1          BIT 0xcd
0000            425   _OVR1           BIT 0xce
0000            426   _SI             BIT 0xc0
0000            427   _ACK            BIT 0xc1
0000            428   _ARBLOST        BIT 0xc2
0000            429   _ACKRQ          BIT 0xc3
0000            430   _STO            BIT 0xc4
0000            431   _STA            BIT 0xc5
0000            432   _TXMODE         BIT 0xc6
0000            433   _MASTER         BIT 0xc7
0000            434   _SPIEN          BIT 0xf8
0000            435   _TXNF           BIT 0xf9
0000            436   _NSSMD0         BIT 0xfa
0000            437   _NSSMD1         BIT 0xfb
0000            438   _RXOVRN         BIT 0xfc
0000            439   _MODF           BIT 0xfd
0000            440   _WCOL           BIT 0xfe
0000            441   _SPIF           BIT 0xff
0000            442   _IT0            BIT 0x88
0000            443   _IE0            BIT 0x89
0000            444   _IT1            BIT 0x8a
0000            445   _IE1            BIT 0x8b
0000            446   _TR0            BIT 0x8c
0000            447   _TF0            BIT 0x8d
0000            448   _TR1            BIT 0x8e
0000            449   _TF1            BIT 0x8f
0000            450   _T2XCLK0        BIT 0xc8
0000            451   _T2XCLK1        BIT 0xc9
0000            452   _TR2            BIT 0xca
0000            453   _T2SPLIT        BIT 0xcb
0000            454   _TF2CEN         BIT 0xcc
0000            455   _TF2LEN         BIT 0xcd
0000            456   _TF2L           BIT 0xce
0000            457   _TF2H           BIT 0xcf
0000            458   _T4XCLK0        BIT 0x98
0000            459   _T4XCLK1        BIT 0x99
0000            460   _TR4            BIT 0x9a
0000            461   _T4SPLIT        BIT 0x9b
0000            462   _TF4CEN         BIT 0x9c
0000            463   _TF4LEN         BIT 0x9d
0000            464   _TF4L           BIT 0x9e
0000            465   _TF4H           BIT 0x9f
0000            466   _T5XCLK0        BIT 0xc0
0000            467   _T5XCLK1        BIT 0xc1
0000            468   _TR5            BIT 0xc2
0000            469   _T5SPLIT        BIT 0xc3
0000            470   _TF5CEN         BIT 0xc4
0000            471   _TF5LEN         BIT 0xc5
0000            472   _TF5L           BIT 0xc6
0000            473   _TF5H           BIT 0xc7
0000            474   _RIE            BIT 0xd8
0000            475   _RXTO0          BIT 0xd9
0000            476   _RXTO1          BIT 0xda
0000            477   _RFRQ           BIT 0xdb
0000            478   _TIE            BIT 0xdc
0000            479   _TXHOLD         BIT 0xdd
0000            480   _TXNF1          BIT 0xde
0000            481   _TFRQ           BIT 0xdf
0000            482   ;--------------------------------------------------------
0000            483   ; overlayable register banks
0000            484   ;--------------------------------------------------------
0000            485            rbank0 segment data overlay
0000            486   ;--------------------------------------------------------
0000            487   ; internal ram data
0000            488   ;--------------------------------------------------------
0000            489            rseg R_DSEG
0000            490   _nunchuck_init_buf_1_49:
0000            491            ds 6
0006            492   _nunchuck_init_sloc0_1_0:
0006            493            ds 2
0008            494   _nunchuck_init_sloc1_1_0:
0008            495            ds 2
000A            496   _nunchuck_init_sloc2_1_0:
000A            497            ds 2
000C            498   _LCDprint_PARM_2:
000C            499            ds 1
000D            500   ;--------------------------------------------------------
000D            501   ; overlayable items in internal ram 
000D            502   ;--------------------------------------------------------
0000            503            rseg    R_OSEG
0000            504            rseg    R_OSEG
0000            505            rseg    R_OSEG
0000            506   ;--------------------------------------------------------
0000            507   ; indirectly addressable internal ram data
0000            508   ;--------------------------------------------------------
0000            509            rseg R_ISEG
0000            510   ;--------------------------------------------------------
0000            511   ; absolute internal ram data
0000            512   ;--------------------------------------------------------
0000            513            DSEG
0000            514   ;--------------------------------------------------------
0000            515   ; bit data
0000            516   ;--------------------------------------------------------
0000            517            rseg R_BSEG
0000            518   _nunchuck_init_PARM_1:
0000            519            DBIT    1
0001            520   _LCDprint_PARM_3:
0001            521            DBIT    1
0002            522   ;--------------------------------------------------------
0002            523   ; paged external ram data
0002            524   ;--------------------------------------------------------
0000            525            rseg R_PSEG
0000            526   ;--------------------------------------------------------
0000            527   ; external ram data
0000            528   ;--------------------------------------------------------
0000            529            rseg R_XSEG
0000            530   ;--------------------------------------------------------
0000            531   ; absolute external ram data
0000            532   ;--------------------------------------------------------
0000            533            XSEG
0000            534   ;--------------------------------------------------------
0000            535   ; external initialized ram data
0000            536   ;--------------------------------------------------------
0000            537            rseg R_IXSEG
0000            538            rseg R_HOME
0000            539            rseg R_GSINIT
0000            540            rseg R_CSEG
0000            541   ;--------------------------------------------------------
0000            542   ; Interrupt vectors
0000            543   ;--------------------------------------------------------
0000            544   ;--------------------------------------------------------
0000            545   ; global & static initialisations
0000            546   ;--------------------------------------------------------
0000            547            rseg R_HOME
0000            548            rseg R_GSINIT
0000            549            rseg R_GSINIT
0000            550   ;--------------------------------------------------------
0000            551   ; data variables initialization
0000            552   ;--------------------------------------------------------
0000            553            rseg R_DINIT
0000            554            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            555   ;--------------------------------------------------------
0000            556   ; code
0000            557   ;--------------------------------------------------------
0000            558            rseg R_CSEG
0000            559   ;------------------------------------------------------------
0000            560   ;Allocation info for local variables in function 'Timer4ms'
0000            561   ;------------------------------------------------------------
0000            562   ;ms                        Allocated to registers r2 
0000            563   ;i                         Allocated to registers r4 
0000            564   ;k                         Allocated to registers r3 
0000            565   ;------------------------------------------------------------
0000            566   ;        lcd2.c:9: void Timer4ms(unsigned char ms)
0000            567   ;        -----------------------------------------
0000            568   ;         function Timer4ms
0000            569   ;        -----------------------------------------
0000            570   _Timer4ms:
0000            571            using   0
0000 AA82       572            mov     r2,dpl
0002            573   ;        lcd2.c:14: k=SFRPAGE;
0002 ABA7       574            mov     r3,_SFRPAGE
0004            575   ;        lcd2.c:15: SFRPAGE=0x10;
0004 75A710     576            mov     _SFRPAGE,#0x10
0007            577   ;        lcd2.c:17: CKCON1|=0b_0000_0001;
0007 43A601     578            orl     _CKCON1,#0x01
000A            579   ;        lcd2.c:19: TMR4RL = 65536-(SYSCLK/1000L); // Set Timer4 to overflow in 1 ms.
000A 75A2C0     580            mov     _TMR4RL,#0xC0
000D 75A3E6     581            mov     (_TMR4RL >> 8),#0xE6
0010            582   ;        lcd2.c:20: TMR4 = TMR4RL;                 // Initialize Timer4 for first overflow
0010 85A2A4     583            mov     _TMR4,_TMR4RL
0013 85A3A5     584            mov     (_TMR4 >> 8),(_TMR4RL >> 8)
0016            585   ;        lcd2.c:22: TF4H=0; // Clear overflow flag
0016 C29F       586            clr     _TF4H
0018            587   ;        lcd2.c:23: TR4=1;  // Start Timer4
0018 D29A       588            setb    _TR4
001A            589   ;        lcd2.c:24: for (i = 0; i < ms; i++)       // Count <ms> overflows
001A 7C00       590            mov     r4,#0x00
001C            591   L002004?:
001C C3         592            clr     c
001D EC         593            mov     a,r4
001E 9A         594            subb    a,r2
001F 5000       595            jnc     L002007?
0021            596   ;        lcd2.c:26: while (!TF4H);  // Wait for overflow
0021            597   L002001?:
0021            598   ;        lcd2.c:27: TF4H=0;         // Clear overflow indicator
0021 109FA8     599            jbc     _TF4H,L002015?
0024 8000       600            sjmp    L002001?
0026            601   L002015?:
0026            602   ;        lcd2.c:24: for (i = 0; i < ms; i++)       // Count <ms> overflows
0026 0C         603            inc     r4
0027 8000       604            sjmp    L002004?
0029            605   L002007?:
0029            606   ;        lcd2.c:29: TR4=0; // Stop Timer4
0029 C29A       607            clr     _TR4
002B            608   ;        lcd2.c:30: SFRPAGE=k;   
002B 8BA7       609            mov     _SFRPAGE,r3
002D 22         610            ret
002E            611   ;------------------------------------------------------------
002E            612   ;Allocation info for local variables in function 'I2C_write'
002E            613   ;------------------------------------------------------------
002E            614   ;output_data               Allocated to registers 
002E            615   ;------------------------------------------------------------
002E            616   ;        lcd2.c:34: void I2C_write (unsigned char output_data)
002E            617   ;        -----------------------------------------
002E            618   ;         function I2C_write
002E            619   ;        -----------------------------------------
002E            620   _I2C_write:
002E 8582C2     621            mov     _SMB0DAT,dpl
0031            622   ;        lcd2.c:37: SI = 0;
0031 C2C0       623            clr     _SI
0033            624   ;        lcd2.c:38: while (!SI); // Wait until done with send
0033            625   L003001?:
0033 30C0E8     626            jnb     _SI,L003001?
0036 22         627            ret
0037            628   ;------------------------------------------------------------
0037            629   ;Allocation info for local variables in function 'I2C_read'
0037            630   ;------------------------------------------------------------
0037            631   ;input_data                Allocated to registers 
0037            632   ;------------------------------------------------------------
0037            633   ;        lcd2.c:41: unsigned char I2C_read (void)
0037            634   ;        -----------------------------------------
0037            635   ;         function I2C_read
0037            636   ;        -----------------------------------------
0037            637   _I2C_read:
0037            638   ;        lcd2.c:45: SI = 0;
0037 C2C0       639            clr     _SI
0039            640   ;        lcd2.c:46: while (!SI); // Wait until we have data to read
0039            641   L004001?:
0039 30C028     642            jnb     _SI,L004001?
003C            643   ;        lcd2.c:47: input_data = SMB0DAT; // Read the data
003C 85C282     644            mov     dpl,_SMB0DAT
003F            645   ;        lcd2.c:49: return input_data;
003F 22         646            ret
0040            647   ;------------------------------------------------------------
0040            648   ;Allocation info for local variables in function 'I2C_start'
0040            649   ;------------------------------------------------------------
0040            650   ;------------------------------------------------------------
0040            651   ;        lcd2.c:52: void I2C_start (void)
0040            652   ;        -----------------------------------------
0040            653   ;         function I2C_start
0040            654   ;        -----------------------------------------
0040            655   _I2C_start:
0040            656   ;        lcd2.c:54: ACK = 1;
0040 D2C1       657            setb    _ACK
0042            658   ;        lcd2.c:55: STA = 1;     // Send I2C start
0042 D2C5       659            setb    _STA
0044            660   ;        lcd2.c:56: STO = 0;
0044 C2C4       661            clr     _STO
0046            662   ;        lcd2.c:57: SI = 0;
0046 C2C0       663            clr     _SI
0048            664   ;        lcd2.c:58: while (!SI); // Wait until start sent
0048            665   L005001?:
0048 30C068     666            jnb     _SI,L005001?
004B            667   ;        lcd2.c:59: STA = 0;     // Reset I2C start
004B C2C5       668            clr     _STA
004D 22         669            ret
004E            670   ;------------------------------------------------------------
004E            671   ;Allocation info for local variables in function 'I2C_stop'
004E            672   ;------------------------------------------------------------
004E            673   ;------------------------------------------------------------
004E            674   ;        lcd2.c:62: void I2C_stop(void)
004E            675   ;        -----------------------------------------
004E            676   ;         function I2C_stop
004E            677   ;        -----------------------------------------
004E            678   _I2C_stop:
004E            679   ;        lcd2.c:64: STO = 1;     // Perform I2C stop
004E D2C4       680            setb    _STO
0050            681   ;        lcd2.c:65: SI = 0;      // Clear SI
0050 C2C0       682            clr     _SI
0052 22         683            ret
0053            684   ;------------------------------------------------------------
0053            685   ;Allocation info for local variables in function 'nunchuck_init'
0053            686   ;------------------------------------------------------------
0053            687   ;i                         Allocated to registers r2 
0053            688   ;buf                       Allocated with name '_nunchuck_init_buf_1_49'
0053            689   ;sloc0                     Allocated with name '_nunchuck_init_sloc0_1_0'
0053            690   ;sloc1                     Allocated with name '_nunchuck_init_sloc1_1_0'
0053            691   ;sloc2                     Allocated with name '_nunchuck_init_sloc2_1_0'
0053            692   ;------------------------------------------------------------
0053            693   ;        lcd2.c:69: void nunchuck_init(bit print_extension_type)
0053            694   ;        -----------------------------------------
0053            695   ;         function nunchuck_init
0053            696   ;        -----------------------------------------
0053            697   _nunchuck_init:
0053            698   ;        lcd2.c:74: I2C_start();
0053 120000     699            lcall   _I2C_start
0056            700   ;        lcd2.c:75: I2C_write(0xA4);
0056 7582A4     701            mov     dpl,#0xA4
0059 120000     702            lcall   _I2C_write
005C            703   ;        lcd2.c:76: I2C_write(0xF0);
005C 7582F0     704            mov     dpl,#0xF0
005F 120000     705            lcall   _I2C_write
0062            706   ;        lcd2.c:77: I2C_write(0x55);
0062 758255     707            mov     dpl,#0x55
0065 120000     708            lcall   _I2C_write
0068            709   ;        lcd2.c:78: I2C_stop();
0068 120000     710            lcall   _I2C_stop
006B            711   ;        lcd2.c:79: Timer4ms(1);
006B 758201     712            mov     dpl,#0x01
006E 120000     713            lcall   _Timer4ms
0071            714   ;        lcd2.c:82: I2C_start();
0071 120000     715            lcall   _I2C_start
0074            716   ;        lcd2.c:83: I2C_write(0xA4);
0074 7582A4     717            mov     dpl,#0xA4
0077 120000     718            lcall   _I2C_write
007A            719   ;        lcd2.c:84: I2C_write(0xFB);
007A 7582FB     720            mov     dpl,#0xFB
007D 120000     721            lcall   _I2C_write
0080            722   ;        lcd2.c:85: I2C_write(0x00);
0080 758200     723            mov     dpl,#0x00
0083 120000     724            lcall   _I2C_write
0086            725   ;        lcd2.c:86: I2C_stop();
0086 120000     726            lcall   _I2C_stop
0089            727   ;        lcd2.c:87: Timer4ms(1);
0089 758201     728            mov     dpl,#0x01
008C 120000     729            lcall   _Timer4ms
008F            730   ;        lcd2.c:92: I2C_start();
008F 120000     731            lcall   _I2C_start
0092            732   ;        lcd2.c:93: I2C_write(0xA4);
0092 7582A4     733            mov     dpl,#0xA4
0095 120000     734            lcall   _I2C_write
0098            735   ;        lcd2.c:94: I2C_write(0xFA); // extension type register
0098 7582FA     736            mov     dpl,#0xFA
009B 120000     737            lcall   _I2C_write
009E            738   ;        lcd2.c:95: I2C_stop();
009E 120000     739            lcall   _I2C_stop
00A1            740   ;        lcd2.c:96: Timer4ms(3); // 3 ms required to complete acquisition
00A1 758203     741            mov     dpl,#0x03
00A4 120000     742            lcall   _Timer4ms
00A7            743   ;        lcd2.c:98: I2C_start();
00A7 120000     744            lcall   _I2C_start
00AA            745   ;        lcd2.c:99: I2C_write(0xA5);
00AA 7582A5     746            mov     dpl,#0xA5
00AD 120000     747            lcall   _I2C_write
00B0            748   ;        lcd2.c:102: for(i=0; i<6; i++)
00B0 7A00       749            mov     r2,#0x00
00B2            750   L007003?:
00B2 BA06E8     751            cjne    r2,#0x06,L007013?
00B5            752   L007013?:
00B5 5000       753            jnc     L007006?
00B7            754   ;        lcd2.c:104: buf[i]=I2C_read();
00B7 EA         755            mov     a,r2
00B8 2478       756            add     a,#_nunchuck_init_buf_1_49
00BA F8         757            mov     r0,a
00BB C002       758            push    ar2
00BD C000       759            push    ar0
00BF 120000     760            lcall   _I2C_read
00C2 E582       761            mov     a,dpl
00C4 D000       762            pop     ar0
00C6 D002       763            pop     ar2
00C8 F6         764            mov     @r0,a
00C9            765   ;        lcd2.c:102: for(i=0; i<6; i++)
00C9 0A         766            inc     r2
00CA 8000       767            sjmp    L007003?
00CC            768   L007006?:
00CC            769   ;        lcd2.c:106: ACK=0;
00CC C2C1       770            clr     _ACK
00CE            771   ;        lcd2.c:107: I2C_stop();
00CE 120000     772            lcall   _I2C_stop
00D1            773   ;        lcd2.c:108: Timer4ms(3);
00D1 758203     774            mov     dpl,#0x03
00D4 120000     775            lcall   _Timer4ms
00D7            776   ;        lcd2.c:111: if(print_extension_type)
00D7 30C068     777            jnb     _nunchuck_init_PARM_1,L007002?
00DA            778   ;        lcd2.c:114: buf[0],  buf[1], buf[2], buf[3], buf[4], buf[5]);
00DA AA7D       779            mov     r2,(_nunchuck_init_buf_1_49 + 0x0005)
00DC 7B00       780            mov     r3,#0x00
00DE AC7C       781            mov     r4,(_nunchuck_init_buf_1_49 + 0x0004)
00E0 7D00       782            mov     r5,#0x00
00E2 857BC8     783            mov     _nunchuck_init_sloc0_1_0,(_nunchuck_init_buf_1_49 + 0x0003)
00E5 75C900     784            mov     (_nunchuck_init_sloc0_1_0 + 1),#0x00
00E8 857A18     785            mov     _nunchuck_init_sloc1_1_0,(_nunchuck_init_buf_1_49 + 0x0002)
00EB 751900     786            mov     (_nunchuck_init_sloc1_1_0 + 1),#0x00
00EE 857968     787            mov     _nunchuck_init_sloc2_1_0,(_nunchuck_init_buf_1_49 + 0x0001)
00F1 756900     788            mov     (_nunchuck_init_sloc2_1_0 + 1),#0x00
00F4 AE78       789            mov     r6,_nunchuck_init_buf_1_49
00F6 7F00       790            mov     r7,#0x00
00F8            791   ;        lcd2.c:113: printf("Extension type: %02x  %02x  %02x  %02x  %02x  %02x\n", 
00F8 C002       792            push    ar2
00FA C003       793            push    ar3
00FC C004       794            push    ar4
00FE C005       795            push    ar5
0100 C0C8       796            push    _nunchuck_init_sloc0_1_0
0102 C0C9       797            push    (_nunchuck_init_sloc0_1_0 + 1)
0104 C018       798            push    _nunchuck_init_sloc1_1_0
0106 C019       799            push    (_nunchuck_init_sloc1_1_0 + 1)
0108 C068       800            push    _nunchuck_init_sloc2_1_0
010A C069       801            push    (_nunchuck_init_sloc2_1_0 + 1)
010C C006       802            push    ar6
010E C007       803            push    ar7
0110 74A8       804            mov     a,#__str_0
0112 C0E0       805            push    acc
0114 74B6       806            mov     a,#(__str_0 >> 8)
0116 C0E0       807            push    acc
0118 7480       808            mov     a,#0x80
011A C0E0       809            push    acc
011C 120000     810            lcall   _printf
011F E581       811            mov     a,sp
0121 24F1       812            add     a,#0xf1
0123 F581       813            mov     sp,a
0125            814   L007002?:
0125            815   ;        lcd2.c:119: I2C_start();
0125 120000     816            lcall   _I2C_start
0128            817   ;        lcd2.c:120: I2C_write(0xA4);
0128 7582A4     818            mov     dpl,#0xA4
012B 120000     819            lcall   _I2C_write
012E            820   ;        lcd2.c:121: I2C_write(0xF0);
012E 7582F0     821            mov     dpl,#0xF0
0131 120000     822            lcall   _I2C_write
0134            823   ;        lcd2.c:122: I2C_write(0xAA);
0134 7582AA     824            mov     dpl,#0xAA
0137 120000     825            lcall   _I2C_write
013A            826   ;        lcd2.c:123: I2C_stop();
013A 120000     827            lcall   _I2C_stop
013D            828   ;        lcd2.c:124: Timer4ms(1);
013D 758201     829            mov     dpl,#0x01
0140 120000     830            lcall   _Timer4ms
0143            831   ;        lcd2.c:127: I2C_start();
0143 120000     832            lcall   _I2C_start
0146            833   ;        lcd2.c:128: I2C_write(0xA4);
0146 7582A4     834            mov     dpl,#0xA4
0149 120000     835            lcall   _I2C_write
014C            836   ;        lcd2.c:129: I2C_write(0x40);
014C 758240     837            mov     dpl,#0x40
014F 120000     838            lcall   _I2C_write
0152            839   ;        lcd2.c:130: I2C_write(0x00);
0152 758200     840            mov     dpl,#0x00
0155 120000     841            lcall   _I2C_write
0158            842   ;        lcd2.c:131: I2C_write(0x00);
0158 758200     843            mov     dpl,#0x00
015B 120000     844            lcall   _I2C_write
015E            845   ;        lcd2.c:132: I2C_write(0x00);
015E 758200     846            mov     dpl,#0x00
0161 120000     847            lcall   _I2C_write
0164            848   ;        lcd2.c:133: I2C_write(0x00);
0164 758200     849            mov     dpl,#0x00
0167 120000     850            lcall   _I2C_write
016A            851   ;        lcd2.c:134: I2C_write(0x00);
016A 758200     852            mov     dpl,#0x00
016D 120000     853            lcall   _I2C_write
0170            854   ;        lcd2.c:135: I2C_write(0x00);
0170 758200     855            mov     dpl,#0x00
0173 120000     856            lcall   _I2C_write
0176            857   ;        lcd2.c:136: I2C_stop();
0176 120000     858            lcall   _I2C_stop
0179            859   ;        lcd2.c:137: Timer4ms(1);
0179 758201     860            mov     dpl,#0x01
017C 120000     861            lcall   _Timer4ms
017F            862   ;        lcd2.c:140: I2C_start();
017F 120000     863            lcall   _I2C_start
0182            864   ;        lcd2.c:141: I2C_write(0xA4);
0182 7582A4     865            mov     dpl,#0xA4
0185 120000     866            lcall   _I2C_write
0188            867   ;        lcd2.c:142: I2C_write(0x40);
0188 758240     868            mov     dpl,#0x40
018B 120000     869            lcall   _I2C_write
018E            870   ;        lcd2.c:143: I2C_write(0x00);
018E 758200     871            mov     dpl,#0x00
0191 120000     872            lcall   _I2C_write
0194            873   ;        lcd2.c:144: I2C_write(0x00);
0194 758200     874            mov     dpl,#0x00
0197 120000     875            lcall   _I2C_write
019A            876   ;        lcd2.c:145: I2C_write(0x00);
019A 758200     877            mov     dpl,#0x00
019D 120000     878            lcall   _I2C_write
01A0            879   ;        lcd2.c:146: I2C_write(0x00);
01A0 758200     880            mov     dpl,#0x00
01A3 120000     881            lcall   _I2C_write
01A6            882   ;        lcd2.c:147: I2C_write(0x00);
01A6 758200     883            mov     dpl,#0x00
01A9 120000     884            lcall   _I2C_write
01AC            885   ;        lcd2.c:148: I2C_write(0x00);
01AC 758200     886            mov     dpl,#0x00
01AF 120000     887            lcall   _I2C_write
01B2            888   ;        lcd2.c:149: I2C_stop();
01B2 120000     889            lcall   _I2C_stop
01B5            890   ;        lcd2.c:150: Timer4ms(1);
01B5 758201     891            mov     dpl,#0x01
01B8 120000     892            lcall   _Timer4ms
01BB            893   ;        lcd2.c:153: I2C_start();
01BB 120000     894            lcall   _I2C_start
01BE            895   ;        lcd2.c:154: I2C_write(0xA4);
01BE 7582A4     896            mov     dpl,#0xA4
01C1 120000     897            lcall   _I2C_write
01C4            898   ;        lcd2.c:155: I2C_write(0x40);
01C4 758240     899            mov     dpl,#0x40
01C7 120000     900            lcall   _I2C_write
01CA            901   ;        lcd2.c:156: I2C_write(0x00);
01CA 758200     902            mov     dpl,#0x00
01CD 120000     903            lcall   _I2C_write
01D0            904   ;        lcd2.c:157: I2C_write(0x00);
01D0 758200     905            mov     dpl,#0x00
01D3 120000     906            lcall   _I2C_write
01D6            907   ;        lcd2.c:158: I2C_write(0x00);
01D6 758200     908            mov     dpl,#0x00
01D9 120000     909            lcall   _I2C_write
01DC            910   ;        lcd2.c:159: I2C_write(0x00);
01DC 758200     911            mov     dpl,#0x00
01DF 120000     912            lcall   _I2C_write
01E2            913   ;        lcd2.c:160: I2C_stop();
01E2 120000     914            lcall   _I2C_stop
01E5            915   ;        lcd2.c:161: Timer4ms(1);
01E5 758201     916            mov     dpl,#0x01
01E8 020000     917            ljmp    _Timer4ms
01EB            918   ;------------------------------------------------------------
01EB            919   ;Allocation info for local variables in function 'nunchuck_getdata'
01EB            920   ;------------------------------------------------------------
01EB            921   ;s                         Allocated to registers r2 r3 r4 
01EB            922   ;i                         Allocated to registers r5 
01EB            923   ;------------------------------------------------------------
01EB            924   ;        lcd2.c:165: void nunchuck_getdata(unsigned char * s)
01EB            925   ;        -----------------------------------------
01EB            926   ;         function nunchuck_getdata
01EB            927   ;        -----------------------------------------
01EB            928   _nunchuck_getdata:
01EB AA82       929            mov     r2,dpl
01ED AB83       930            mov     r3,dph
01EF ACF0       931            mov     r4,b
01F1            932   ;        lcd2.c:170: I2C_start();
01F1 C002       933            push    ar2
01F3 C003       934            push    ar3
01F5 C004       935            push    ar4
01F7 120000     936            lcall   _I2C_start
01FA            937   ;        lcd2.c:171: I2C_write(0xA4);
01FA 7582A4     938            mov     dpl,#0xA4
01FD 120000     939            lcall   _I2C_write
0200            940   ;        lcd2.c:172: I2C_write(0x00);
0200 758200     941            mov     dpl,#0x00
0203 120000     942            lcall   _I2C_write
0206            943   ;        lcd2.c:173: I2C_stop();
0206 120000     944            lcall   _I2C_stop
0209            945   ;        lcd2.c:174: Timer4ms(3);        // 3 ms required to complete acquisition
0209 758203     946            mov     dpl,#0x03
020C 120000     947            lcall   _Timer4ms
020F            948   ;        lcd2.c:178: I2C_start();
020F 120000     949            lcall   _I2C_start
0212            950   ;        lcd2.c:179: I2C_write(0xA5);
0212 7582A5     951            mov     dpl,#0xA5
0215 120000     952            lcall   _I2C_write
0218 D004       953            pop     ar4
021A D003       954            pop     ar3
021C D002       955            pop     ar2
021E            956   ;        lcd2.c:182: for(i=0; i<6; i++)
021E 7D00       957            mov     r5,#0x00
0220            958   L008001?:
0220 BD0668     959            cjne    r5,#0x06,L008010?
0223            960   L008010?:
0223 5000       961            jnc     L008004?
0225            962   ;        lcd2.c:184: s[i]=(I2C_read()^0x17)+0x17; // Read and decrypt
0225 ED         963            mov     a,r5
0226 2A         964            add     a,r2
0227 FE         965            mov     r6,a
0228 E4         966            clr     a
0229 3B         967            addc    a,r3
022A FF         968            mov     r7,a
022B 8C00       969            mov     ar0,r4
022D C002       970            push    ar2
022F C003       971            push    ar3
0231 C004       972            push    ar4
0233 C005       973            push    ar5
0235 C006       974            push    ar6
0237 C007       975            push    ar7
0239 C000       976            push    ar0
023B 120000     977            lcall   _I2C_read
023E E582       978            mov     a,dpl
0240 D000       979            pop     ar0
0242 D007       980            pop     ar7
0244 D006       981            pop     ar6
0246 D005       982            pop     ar5
0248 D004       983            pop     ar4
024A D003       984            pop     ar3
024C D002       985            pop     ar2
024E 6417       986            xrl     a,#0x17
0250 2417       987            add     a,#0x17
0252 F9         988            mov     r1,a
0253 8E82       989            mov     dpl,r6
0255 8F83       990            mov     dph,r7
0257 88F0       991            mov     b,r0
0259 120000     992            lcall   __gptrput
025C            993   ;        lcd2.c:182: for(i=0; i<6; i++)
025C 0D         994            inc     r5
025D 8000       995            sjmp    L008001?
025F            996   L008004?:
025F            997   ;        lcd2.c:186: ACK=0;
025F C2C1       998            clr     _ACK
0261            999   ;        lcd2.c:187: I2C_stop();
0261 020000    1000            ljmp    _I2C_stop
0264           1001   ;------------------------------------------------------------
0264           1002   ;Allocation info for local variables in function 'LCD_pulse'
0264           1003   ;------------------------------------------------------------
0264           1004   ;------------------------------------------------------------
0264           1005   ;        lcd2.c:193: void LCD_pulse (void)
0264           1006   ;        -----------------------------------------
0264           1007   ;         function LCD_pulse
0264           1008   ;        -----------------------------------------
0264           1009   _LCD_pulse:
0264           1010   ;        lcd2.c:195: LCD_E=1;
0264 D2A5      1011            setb    _P2_5
0266           1012   ;        lcd2.c:196: Timer4ms(1);
0266 758201    1013            mov     dpl,#0x01
0269 120000    1014            lcall   _Timer4ms
026C           1015   ;        lcd2.c:197: LCD_E=0;
026C C2A5      1016            clr     _P2_5
026E 22        1017            ret
026F           1018   ;------------------------------------------------------------
026F           1019   ;Allocation info for local variables in function 'LCD_byte'
026F           1020   ;------------------------------------------------------------
026F           1021   ;x                         Allocated to registers r2 
026F           1022   ;------------------------------------------------------------
026F           1023   ;        lcd2.c:200: void LCD_byte (unsigned char x)
026F           1024   ;        -----------------------------------------
026F           1025   ;         function LCD_byte
026F           1026   ;        -----------------------------------------
026F           1027   _LCD_byte:
026F AA82      1028            mov     r2,dpl
0271           1029   ;        lcd2.c:203: ACC=x; //Send high nible
0271 8AE0      1030            mov     _ACC,r2
0273           1031   ;        lcd2.c:204: LCD_D7=ACC_7;
0273 A2E7      1032            mov     c,_ACC_7
0275 92A1      1033            mov     _P2_1,c
0277           1034   ;        lcd2.c:205: LCD_D6=ACC_6;
0277 A2E6      1035            mov     c,_ACC_6
0279 92A2      1036            mov     _P2_2,c
027B           1037   ;        lcd2.c:206: LCD_D5=ACC_5;
027B A2E5      1038            mov     c,_ACC_5
027D 92A3      1039            mov     _P2_3,c
027F           1040   ;        lcd2.c:207: LCD_D4=ACC_4;
027F A2E4      1041            mov     c,_ACC_4
0281 92A4      1042            mov     _P2_4,c
0283           1043   ;        lcd2.c:208: LCD_pulse();
0283 C002      1044            push    ar2
0285 120000    1045            lcall   _LCD_pulse
0288           1046   ;        lcd2.c:209: Timer4ms(1);
0288 758201    1047            mov     dpl,#0x01
028B 120000    1048            lcall   _Timer4ms
028E D002      1049            pop     ar2
0290           1050   ;        lcd2.c:210: ACC=x; //Send low nible
0290 8AE0      1051            mov     _ACC,r2
0292           1052   ;        lcd2.c:211: LCD_D7=ACC_3;
0292 A2E3      1053            mov     c,_ACC_3
0294 92A1      1054            mov     _P2_1,c
0296           1055   ;        lcd2.c:212: LCD_D6=ACC_2;
0296 A2E2      1056            mov     c,_ACC_2
0298 92A2      1057            mov     _P2_2,c
029A           1058   ;        lcd2.c:213: LCD_D5=ACC_1;
029A A2E1      1059            mov     c,_ACC_1
029C 92A3      1060            mov     _P2_3,c
029E           1061   ;        lcd2.c:214: LCD_D4=ACC_0;
029E A2E0      1062            mov     c,_ACC_0
02A0 92A4      1063            mov     _P2_4,c
02A2           1064   ;        lcd2.c:215: LCD_pulse();
02A2 020000    1065            ljmp    _LCD_pulse
02A5           1066   ;------------------------------------------------------------
02A5           1067   ;Allocation info for local variables in function 'WriteData'
02A5           1068   ;------------------------------------------------------------
02A5           1069   ;x                         Allocated to registers 
02A5           1070   ;------------------------------------------------------------
02A5           1071   ;        lcd2.c:218: void WriteData (unsigned char x)
02A5           1072   ;        -----------------------------------------
02A5           1073   ;         function WriteData
02A5           1074   ;        -----------------------------------------
02A5           1075   _WriteData:
02A5           1076   ;        lcd2.c:220: LCD_RS=1;
02A5 D2A6      1077            setb    _P2_6
02A7           1078   ;        lcd2.c:221: LCD_byte(x);
02A7 120000    1079            lcall   _LCD_byte
02AA           1080   ;        lcd2.c:222: Timer4ms(2);
02AA 758202    1081            mov     dpl,#0x02
02AD 020000    1082            ljmp    _Timer4ms
02B0           1083   ;------------------------------------------------------------
02B0           1084   ;Allocation info for local variables in function 'WriteCommand'
02B0           1085   ;------------------------------------------------------------
02B0           1086   ;x                         Allocated to registers 
02B0           1087   ;------------------------------------------------------------
02B0           1088   ;        lcd2.c:225: void WriteCommand (unsigned char x)
02B0           1089   ;        -----------------------------------------
02B0           1090   ;         function WriteCommand
02B0           1091   ;        -----------------------------------------
02B0           1092   _WriteCommand:
02B0           1093   ;        lcd2.c:227: LCD_RS=0;
02B0 C2A6      1094            clr     _P2_6
02B2           1095   ;        lcd2.c:228: LCD_byte(x);
02B2 120000    1096            lcall   _LCD_byte
02B5           1097   ;        lcd2.c:229: Timer4ms(5);
02B5 758205    1098            mov     dpl,#0x05
02B8 020000    1099            ljmp    _Timer4ms
02BB           1100   ;------------------------------------------------------------
02BB           1101   ;Allocation info for local variables in function 'LCD_4BIT'
02BB           1102   ;------------------------------------------------------------
02BB           1103   ;------------------------------------------------------------
02BB           1104   ;        lcd2.c:232: void LCD_4BIT (void)
02BB           1105   ;        -----------------------------------------
02BB           1106   ;         function LCD_4BIT
02BB           1107   ;        -----------------------------------------
02BB           1108   _LCD_4BIT:
02BB           1109   ;        lcd2.c:234: LCD_E=0; // Resting state of LCD's enable is zero
02BB C2A5      1110            clr     _P2_5
02BD           1111   ;        lcd2.c:236: Timer4ms(20);
02BD 758214    1112            mov     dpl,#0x14
02C0 120000    1113            lcall   _Timer4ms
02C3           1114   ;        lcd2.c:238: WriteCommand(0x33);
02C3 758233    1115            mov     dpl,#0x33
02C6 120000    1116            lcall   _WriteCommand
02C9           1117   ;        lcd2.c:239: WriteCommand(0x33);
02C9 758233    1118            mov     dpl,#0x33
02CC 120000    1119            lcall   _WriteCommand
02CF           1120   ;        lcd2.c:240: WriteCommand(0x32); // Change to 4-bit mode
02CF 758232    1121            mov     dpl,#0x32
02D2 120000    1122            lcall   _WriteCommand
02D5           1123   ;        lcd2.c:243: WriteCommand(0x28);
02D5 758228    1124            mov     dpl,#0x28
02D8 120000    1125            lcall   _WriteCommand
02DB           1126   ;        lcd2.c:244: WriteCommand(0x0c);
02DB 75820C    1127            mov     dpl,#0x0C
02DE 120000    1128            lcall   _WriteCommand
02E1           1129   ;        lcd2.c:245: WriteCommand(0x01); // Clear screen command (takes some time)
02E1 758201    1130            mov     dpl,#0x01
02E4 120000    1131            lcall   _WriteCommand
02E7           1132   ;        lcd2.c:246: Timer4ms(20); // Wait for clear screen command to finsih.
02E7 758214    1133            mov     dpl,#0x14
02EA 020000    1134            ljmp    _Timer4ms
02ED           1135   ;------------------------------------------------------------
02ED           1136   ;Allocation info for local variables in function 'LCDprint'
02ED           1137   ;------------------------------------------------------------
02ED           1138   ;line                      Allocated with name '_LCDprint_PARM_2'
02ED           1139   ;string                    Allocated to registers r2 r3 r4 
02ED           1140   ;j                         Allocated to registers r5 r6 
02ED           1141   ;------------------------------------------------------------
02ED           1142   ;        lcd2.c:249: void LCDprint(char * string, unsigned char line, bit clear)
02ED           1143   ;        -----------------------------------------
02ED           1144   ;         function LCDprint
02ED           1145   ;        -----------------------------------------
02ED           1146   _LCDprint:
02ED AA82      1147            mov     r2,dpl
02EF AB83      1148            mov     r3,dph
02F1 ACF0      1149            mov     r4,b
02F3           1150   ;        lcd2.c:253: WriteCommand(line==2?0xc0:0x80);
02F3 7402      1151            mov     a,#0x02
02F5 B51028    1152            cjne    a,_LCDprint_PARM_2,L014013?
02F8 7DC0      1153            mov     r5,#0xC0
02FA 8000      1154            sjmp    L014014?
02FC           1155   L014013?:
02FC 7D80      1156            mov     r5,#0x80
02FE           1157   L014014?:
02FE 8D82      1158            mov     dpl,r5
0300 C002      1159            push    ar2
0302 C003      1160            push    ar3
0304 C004      1161            push    ar4
0306 120000    1162            lcall   _WriteCommand
0309           1163   ;        lcd2.c:254: Timer4ms(5);
0309 758205    1164            mov     dpl,#0x05
030C 120000    1165            lcall   _Timer4ms
030F D004      1166            pop     ar4
0311 D003      1167            pop     ar3
0313 D002      1168            pop     ar2
0315           1169   ;        lcd2.c:255: for(j=0; string[j]!=0; j++)         WriteData(string[j]);// Write the message
0315 7D00      1170            mov     r5,#0x00
0317 7E00      1171            mov     r6,#0x00
0319           1172   L014003?:
0319 ED        1173            mov     a,r5
031A 2A        1174            add     a,r2
031B FF        1175            mov     r7,a
031C EE        1176            mov     a,r6
031D 3B        1177            addc    a,r3
031E F8        1178            mov     r0,a
031F 8C01      1179            mov     ar1,r4
0321 8F82      1180            mov     dpl,r7
0323 8883      1181            mov     dph,r0
0325 89F0      1182            mov     b,r1
0327 120000    1183            lcall   __gptrget
032A FF        1184            mov     r7,a
032B 6000      1185            jz      L014006?
032D 8F82      1186            mov     dpl,r7
032F C002      1187            push    ar2
0331 C003      1188            push    ar3
0333 C004      1189            push    ar4
0335 C005      1190            push    ar5
0337 C006      1191            push    ar6
0339 120000    1192            lcall   _WriteData
033C D006      1193            pop     ar6
033E D005      1194            pop     ar5
0340 D004      1195            pop     ar4
0342 D003      1196            pop     ar3
0344 D002      1197            pop     ar2
0346 0D        1198            inc     r5
0347 BD00A8    1199            cjne    r5,#0x00,L014003?
034A 0E        1200            inc     r6
034B 8000      1201            sjmp    L014003?
034D           1202   L014006?:
034D           1203   ;        lcd2.c:256: if(clear) for(; j<CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
034D 307068    1204            jnb     _LCDprint_PARM_3,L014011?
0350 8D02      1205            mov     ar2,r5
0352 8E03      1206            mov     ar3,r6
0354           1207   L014007?:
0354 C3        1208            clr     c
0355 EA        1209            mov     a,r2
0356 9410      1210            subb    a,#0x10
0358 EB        1211            mov     a,r3
0359 6480      1212            xrl     a,#0x80
035B 9480      1213            subb    a,#0x80
035D 5000      1214            jnc     L014011?
035F 758220    1215            mov     dpl,#0x20
0362 C002      1216            push    ar2
0364 C003      1217            push    ar3
0366 120000    1218            lcall   _WriteData
0369 D003      1219            pop     ar3
036B D002      1220            pop     ar2
036D 0A        1221            inc     r2
036E BA00A8    1222            cjne    r2,#0x00,L014007?
0371 0B        1223            inc     r3
0372 8000      1224            sjmp    L014007?
0374           1225   L014011?:
0374 22        1226            ret
0375           1227            rseg R_CSEG
0375           1228   
0000           1229            rseg R_XINIT
0000           1230   
0000           1231            rseg R_CONST
0000           1232   __str_0:
0000 45787465  1233            db 'Extension type: %02x  %02x  %02x  %02x  %02x  %02x'
     6E73696F
     6E207479
     70653A20
     25303278
     20202530
     32782020
     25303278
     20202530
     32782020
     25303278
     20202530
     3278
0032 0A        1234            db 0x0A
0033 00        1235            db 0x00
0034           1236   
0000           1237            CSEG
0000           1238   
0000           1239   end
